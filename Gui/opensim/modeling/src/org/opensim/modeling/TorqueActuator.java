/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.12
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class TorqueActuator extends ScalarActuator {
  private long swigCPtr;

  public TorqueActuator(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.TorqueActuator_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(TorqueActuator obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimModelJNI.delete_TorqueActuator(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static TorqueActuator safeDownCast(OpenSimObject obj) {
    long cPtr = opensimModelJNI.TorqueActuator_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new TorqueActuator(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimModelJNI.TorqueActuator_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimModelJNI.TorqueActuator_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimModelJNI.TorqueActuator_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new TorqueActuator(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimModelJNI.TorqueActuator_getConcreteClassName(swigCPtr, this);
  }

  public void copyProperty_bodyA(TorqueActuator source) {
    opensimModelJNI.TorqueActuator_copyProperty_bodyA(swigCPtr, this, TorqueActuator.getCPtr(source), source);
  }

  public String get_bodyA(int i) {
    return opensimModelJNI.TorqueActuator_get_bodyA__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_bodyA(int i) {
    return new SWIGTYPE_p_std__string(opensimModelJNI.TorqueActuator_upd_bodyA__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_bodyA(int i, String value) {
    opensimModelJNI.TorqueActuator_set_bodyA__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_bodyA(String value) {
    return opensimModelJNI.TorqueActuator_append_bodyA(swigCPtr, this, value);
  }

  public void constructProperty_bodyA() {
    opensimModelJNI.TorqueActuator_constructProperty_bodyA__SWIG_0(swigCPtr, this);
  }

  public void constructProperty_bodyA(String initValue) {
    opensimModelJNI.TorqueActuator_constructProperty_bodyA__SWIG_1(swigCPtr, this, initValue);
  }

  public String get_bodyA() {
    return opensimModelJNI.TorqueActuator_get_bodyA__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_bodyA() {
    return new SWIGTYPE_p_std__string(opensimModelJNI.TorqueActuator_upd_bodyA__SWIG_1(swigCPtr, this), false);
  }

  public void set_bodyA(String value) {
    opensimModelJNI.TorqueActuator_set_bodyA__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_bodyB(TorqueActuator source) {
    opensimModelJNI.TorqueActuator_copyProperty_bodyB(swigCPtr, this, TorqueActuator.getCPtr(source), source);
  }

  public String get_bodyB(int i) {
    return opensimModelJNI.TorqueActuator_get_bodyB__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_bodyB(int i) {
    return new SWIGTYPE_p_std__string(opensimModelJNI.TorqueActuator_upd_bodyB__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_bodyB(int i, String value) {
    opensimModelJNI.TorqueActuator_set_bodyB__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_bodyB(String value) {
    return opensimModelJNI.TorqueActuator_append_bodyB(swigCPtr, this, value);
  }

  public void constructProperty_bodyB() {
    opensimModelJNI.TorqueActuator_constructProperty_bodyB__SWIG_0(swigCPtr, this);
  }

  public void constructProperty_bodyB(String initValue) {
    opensimModelJNI.TorqueActuator_constructProperty_bodyB__SWIG_1(swigCPtr, this, initValue);
  }

  public String get_bodyB() {
    return opensimModelJNI.TorqueActuator_get_bodyB__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_bodyB() {
    return new SWIGTYPE_p_std__string(opensimModelJNI.TorqueActuator_upd_bodyB__SWIG_1(swigCPtr, this), false);
  }

  public void set_bodyB(String value) {
    opensimModelJNI.TorqueActuator_set_bodyB__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_torque_is_global(TorqueActuator source) {
    opensimModelJNI.TorqueActuator_copyProperty_torque_is_global(swigCPtr, this, TorqueActuator.getCPtr(source), source);
  }

  public boolean get_torque_is_global(int i) {
    return opensimModelJNI.TorqueActuator_get_torque_is_global__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_bool upd_torque_is_global(int i) {
    return new SWIGTYPE_p_bool(opensimModelJNI.TorqueActuator_upd_torque_is_global__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_torque_is_global(int i, boolean value) {
    opensimModelJNI.TorqueActuator_set_torque_is_global__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_torque_is_global(boolean value) {
    return opensimModelJNI.TorqueActuator_append_torque_is_global(swigCPtr, this, value);
  }

  public void constructProperty_torque_is_global(boolean initValue) {
    opensimModelJNI.TorqueActuator_constructProperty_torque_is_global(swigCPtr, this, initValue);
  }

  public boolean get_torque_is_global() {
    return opensimModelJNI.TorqueActuator_get_torque_is_global__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_bool upd_torque_is_global() {
    return new SWIGTYPE_p_bool(opensimModelJNI.TorqueActuator_upd_torque_is_global__SWIG_1(swigCPtr, this), false);
  }

  public void set_torque_is_global(boolean value) {
    opensimModelJNI.TorqueActuator_set_torque_is_global__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_axis(TorqueActuator source) {
    opensimModelJNI.TorqueActuator_copyProperty_axis(swigCPtr, this, TorqueActuator.getCPtr(source), source);
  }

  public Vec3 get_axis(int i) {
    return new Vec3(opensimModelJNI.TorqueActuator_get_axis__SWIG_0(swigCPtr, this, i), false);
  }

  public Vec3 upd_axis(int i) {
    return new Vec3(opensimModelJNI.TorqueActuator_upd_axis__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_axis(int i, Vec3 value) {
    opensimModelJNI.TorqueActuator_set_axis__SWIG_0(swigCPtr, this, i, Vec3.getCPtr(value), value);
  }

  public int append_axis(Vec3 value) {
    return opensimModelJNI.TorqueActuator_append_axis(swigCPtr, this, Vec3.getCPtr(value), value);
  }

  public void constructProperty_axis(Vec3 initValue) {
    opensimModelJNI.TorqueActuator_constructProperty_axis(swigCPtr, this, Vec3.getCPtr(initValue), initValue);
  }

  public Vec3 get_axis() {
    return new Vec3(opensimModelJNI.TorqueActuator_get_axis__SWIG_1(swigCPtr, this), false);
  }

  public Vec3 upd_axis() {
    return new Vec3(opensimModelJNI.TorqueActuator_upd_axis__SWIG_1(swigCPtr, this), false);
  }

  public void set_axis(Vec3 value) {
    opensimModelJNI.TorqueActuator_set_axis__SWIG_1(swigCPtr, this, Vec3.getCPtr(value), value);
  }

  public void copyProperty_optimal_force(TorqueActuator source) {
    opensimModelJNI.TorqueActuator_copyProperty_optimal_force(swigCPtr, this, TorqueActuator.getCPtr(source), source);
  }

  public double get_optimal_force(int i) {
    return opensimModelJNI.TorqueActuator_get_optimal_force__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_optimal_force(int i) {
    return new SWIGTYPE_p_double(opensimModelJNI.TorqueActuator_upd_optimal_force__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_optimal_force(int i, double value) {
    opensimModelJNI.TorqueActuator_set_optimal_force__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_optimal_force(double value) {
    return opensimModelJNI.TorqueActuator_append_optimal_force(swigCPtr, this, value);
  }

  public void constructProperty_optimal_force(double initValue) {
    opensimModelJNI.TorqueActuator_constructProperty_optimal_force(swigCPtr, this, initValue);
  }

  public double get_optimal_force() {
    return opensimModelJNI.TorqueActuator_get_optimal_force__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_optimal_force() {
    return new SWIGTYPE_p_double(opensimModelJNI.TorqueActuator_upd_optimal_force__SWIG_1(swigCPtr, this), false);
  }

  public void set_optimal_force(double value) {
    opensimModelJNI.TorqueActuator_set_optimal_force__SWIG_1(swigCPtr, this, value);
  }

  public TorqueActuator() {
    this(opensimModelJNI.new_TorqueActuator__SWIG_0(), true);
  }

  public TorqueActuator(PhysicalFrame bodyA, PhysicalFrame bodyB, Vec3 axis, boolean axisInGround) {
    this(opensimModelJNI.new_TorqueActuator__SWIG_1(PhysicalFrame.getCPtr(bodyA), bodyA, PhysicalFrame.getCPtr(bodyB), bodyB, Vec3.getCPtr(axis), axis, axisInGround), true);
  }

  public TorqueActuator(PhysicalFrame bodyA, PhysicalFrame bodyB, Vec3 axis) {
    this(opensimModelJNI.new_TorqueActuator__SWIG_2(PhysicalFrame.getCPtr(bodyA), bodyA, PhysicalFrame.getCPtr(bodyB), bodyB, Vec3.getCPtr(axis), axis), true);
  }

  public void setAxis(Vec3 axis) {
    opensimModelJNI.TorqueActuator_setAxis(swigCPtr, this, Vec3.getCPtr(axis), axis);
  }

  public Vec3 getAxis() {
    return new Vec3(opensimModelJNI.TorqueActuator_getAxis(swigCPtr, this), false);
  }

  public void setTorqueIsGlobal(boolean isGlobal) {
    opensimModelJNI.TorqueActuator_setTorqueIsGlobal(swigCPtr, this, isGlobal);
  }

  public boolean getTorqueIsGlobal() {
    return opensimModelJNI.TorqueActuator_getTorqueIsGlobal(swigCPtr, this);
  }

  public void setOptimalForce(double optimalForce) {
    opensimModelJNI.TorqueActuator_setOptimalForce(swigCPtr, this, optimalForce);
  }

  public double getOptimalForce() {
    return opensimModelJNI.TorqueActuator_getOptimalForce(swigCPtr, this);
  }

  public void setBodyA(PhysicalFrame body) {
    opensimModelJNI.TorqueActuator_setBodyA(swigCPtr, this, PhysicalFrame.getCPtr(body), body);
  }

  public void setBodyB(PhysicalFrame body) {
    opensimModelJNI.TorqueActuator_setBodyB(swigCPtr, this, PhysicalFrame.getCPtr(body), body);
  }

  public PhysicalFrame getBodyA() {
    return new PhysicalFrame(opensimModelJNI.TorqueActuator_getBodyA(swigCPtr, this), false);
  }

  public PhysicalFrame getBodyB() {
    return new PhysicalFrame(opensimModelJNI.TorqueActuator_getBodyB(swigCPtr, this), false);
  }

}
