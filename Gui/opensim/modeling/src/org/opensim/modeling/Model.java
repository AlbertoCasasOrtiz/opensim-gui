/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.5
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class Model extends ModelComponent {
  private long swigCPtr;

  public Model(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.Model_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(Model obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimModelJNI.delete_Model(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  private String originalModelPath = null;
  // Important that we only refer to originalModelPath if the model's getInputFileName() is not set
  public void setOriginalModelPathFromModel(Model model) {
    originalModelPath = null;
    if(model.getInputFileName()!=null && !model.getInputFileName().equals(""))
      originalModelPath = (new java.io.File(model.getInputFileName())).getParent();
	 else if(model.originalModelPath!=null && !model.originalModelPath.equals(""))
      originalModelPath = model.originalModelPath;
  }
  public String getFilePath() {
    if(getInputFileName()!=null && !getInputFileName().equals("") && (new java.io.File(getInputFileName())).getParent()!=null)
      return (new java.io.File(getInputFileName())).getParent() + java.io.File.separator;
    else if(originalModelPath!=null && !originalModelPath.equals(""))
      return originalModelPath + java.io.File.separator;
    else return "";
  }

  public void addModelComponent(ModelComponent aComponent) {
	aComponent.markAdopted();
    private_addModelComponent(aComponent);
  }

  public void addBody(Body aBody) {
	aBody.markAdopted();
    private_addBody(aBody);
  }

  public void addConstraint(Constraint aConstraint) {
	aConstraint.markAdopted();
    private_addConstraint(aConstraint);
  }

  public void addProbe(Probe aProbe) {
	aProbe.markAdopted();
    private_addProbe(aProbe);
  }  
  
  public void addContactGeometry(ContactGeometry aContactGeometry) {
	aContactGeometry.markAdopted();
    private_addContactGeometry(aContactGeometry);
  }

  public void addAnalysis(Analysis aAnalysis) {
	aAnalysis.markAdopted();
	private_addAnalysis(aAnalysis);
  }

  public void addForce(Force aForce) {
	aForce.markAdopted();
	private_addForce(aForce);
  }

  public void addController(Controller aController) {
	aController.markAdopted();
	private_addController(aController);
  }

  public static Model safeDownCast(OpenSimObject obj) {
    long cPtr = opensimModelJNI.Model_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new Model(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimModelJNI.Model_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimModelJNI.Model_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimModelJNI.Model_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new Model(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimModelJNI.Model_getConcreteClassName(swigCPtr, this);
  }

  public void copyProperty_assembly_accuracy(Model source) {
    opensimModelJNI.Model_copyProperty_assembly_accuracy(swigCPtr, this, Model.getCPtr(source), source);
  }

  public double get_assembly_accuracy(int i) {
    return opensimModelJNI.Model_get_assembly_accuracy__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_assembly_accuracy(int i) {
    return new SWIGTYPE_p_double(opensimModelJNI.Model_upd_assembly_accuracy__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_assembly_accuracy(int i, double value) {
    opensimModelJNI.Model_set_assembly_accuracy__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_assembly_accuracy(double value) {
    return opensimModelJNI.Model_append_assembly_accuracy(swigCPtr, this, value);
  }

  public void constructProperty_assembly_accuracy(double initValue) {
    opensimModelJNI.Model_constructProperty_assembly_accuracy(swigCPtr, this, initValue);
  }

  public double get_assembly_accuracy() {
    return opensimModelJNI.Model_get_assembly_accuracy__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_assembly_accuracy() {
    return new SWIGTYPE_p_double(opensimModelJNI.Model_upd_assembly_accuracy__SWIG_1(swigCPtr, this), false);
  }

  public void set_assembly_accuracy(double value) {
    opensimModelJNI.Model_set_assembly_accuracy__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_ground(Model source) {
    opensimModelJNI.Model_copyProperty_ground(swigCPtr, this, Model.getCPtr(source), source);
  }

  public Ground get_ground(int i) {
    return new Ground(opensimModelJNI.Model_get_ground__SWIG_0(swigCPtr, this, i), false);
  }

  public Ground upd_ground(int i) {
    return new Ground(opensimModelJNI.Model_upd_ground__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_ground(int i, Ground value) {
    opensimModelJNI.Model_set_ground__SWIG_0(swigCPtr, this, i, Ground.getCPtr(value), value);
  }

  public int append_ground(Ground value) {
    return opensimModelJNI.Model_append_ground(swigCPtr, this, Ground.getCPtr(value), value);
  }

  public void constructProperty_ground(Ground initValue) {
    opensimModelJNI.Model_constructProperty_ground(swigCPtr, this, Ground.getCPtr(initValue), initValue);
  }

  public Ground get_ground() {
    return new Ground(opensimModelJNI.Model_get_ground__SWIG_1(swigCPtr, this), false);
  }

  public Ground upd_ground() {
    return new Ground(opensimModelJNI.Model_upd_ground__SWIG_1(swigCPtr, this), false);
  }

  public void set_ground(Ground value) {
    opensimModelJNI.Model_set_ground__SWIG_1(swigCPtr, this, Ground.getCPtr(value), value);
  }

  public void copyProperty_gravity(Model source) {
    opensimModelJNI.Model_copyProperty_gravity(swigCPtr, this, Model.getCPtr(source), source);
  }

  public Vec3 get_gravity(int i) {
    return new Vec3(opensimModelJNI.Model_get_gravity__SWIG_0(swigCPtr, this, i), false);
  }

  public Vec3 upd_gravity(int i) {
    return new Vec3(opensimModelJNI.Model_upd_gravity__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_gravity(int i, Vec3 value) {
    opensimModelJNI.Model_set_gravity__SWIG_0(swigCPtr, this, i, Vec3.getCPtr(value), value);
  }

  public int append_gravity(Vec3 value) {
    return opensimModelJNI.Model_append_gravity(swigCPtr, this, Vec3.getCPtr(value), value);
  }

  public void constructProperty_gravity(Vec3 initValue) {
    opensimModelJNI.Model_constructProperty_gravity(swigCPtr, this, Vec3.getCPtr(initValue), initValue);
  }

  public Vec3 get_gravity() {
    return new Vec3(opensimModelJNI.Model_get_gravity__SWIG_1(swigCPtr, this), false);
  }

  public Vec3 upd_gravity() {
    return new Vec3(opensimModelJNI.Model_upd_gravity__SWIG_1(swigCPtr, this), false);
  }

  public void set_gravity(Vec3 value) {
    opensimModelJNI.Model_set_gravity__SWIG_1(swigCPtr, this, Vec3.getCPtr(value), value);
  }

  public void copyProperty_credits(Model source) {
    opensimModelJNI.Model_copyProperty_credits(swigCPtr, this, Model.getCPtr(source), source);
  }

  public String get_credits(int i) {
    return opensimModelJNI.Model_get_credits__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_credits(int i) {
    return new SWIGTYPE_p_std__string(opensimModelJNI.Model_upd_credits__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_credits(int i, String value) {
    opensimModelJNI.Model_set_credits__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_credits(String value) {
    return opensimModelJNI.Model_append_credits(swigCPtr, this, value);
  }

  public void constructProperty_credits(String initValue) {
    opensimModelJNI.Model_constructProperty_credits(swigCPtr, this, initValue);
  }

  public String get_credits() {
    return opensimModelJNI.Model_get_credits__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_credits() {
    return new SWIGTYPE_p_std__string(opensimModelJNI.Model_upd_credits__SWIG_1(swigCPtr, this), false);
  }

  public void set_credits(String value) {
    opensimModelJNI.Model_set_credits__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_publications(Model source) {
    opensimModelJNI.Model_copyProperty_publications(swigCPtr, this, Model.getCPtr(source), source);
  }

  public String get_publications(int i) {
    return opensimModelJNI.Model_get_publications__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_publications(int i) {
    return new SWIGTYPE_p_std__string(opensimModelJNI.Model_upd_publications__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_publications(int i, String value) {
    opensimModelJNI.Model_set_publications__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_publications(String value) {
    return opensimModelJNI.Model_append_publications(swigCPtr, this, value);
  }

  public void constructProperty_publications(String initValue) {
    opensimModelJNI.Model_constructProperty_publications(swigCPtr, this, initValue);
  }

  public String get_publications() {
    return opensimModelJNI.Model_get_publications__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_publications() {
    return new SWIGTYPE_p_std__string(opensimModelJNI.Model_upd_publications__SWIG_1(swigCPtr, this), false);
  }

  public void set_publications(String value) {
    opensimModelJNI.Model_set_publications__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_length_units(Model source) {
    opensimModelJNI.Model_copyProperty_length_units(swigCPtr, this, Model.getCPtr(source), source);
  }

  public String get_length_units(int i) {
    return opensimModelJNI.Model_get_length_units__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_length_units(int i) {
    return new SWIGTYPE_p_std__string(opensimModelJNI.Model_upd_length_units__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_length_units(int i, String value) {
    opensimModelJNI.Model_set_length_units__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_length_units(String value) {
    return opensimModelJNI.Model_append_length_units(swigCPtr, this, value);
  }

  public void constructProperty_length_units(String initValue) {
    opensimModelJNI.Model_constructProperty_length_units(swigCPtr, this, initValue);
  }

  public String get_length_units() {
    return opensimModelJNI.Model_get_length_units__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_length_units() {
    return new SWIGTYPE_p_std__string(opensimModelJNI.Model_upd_length_units__SWIG_1(swigCPtr, this), false);
  }

  public void set_length_units(String value) {
    opensimModelJNI.Model_set_length_units__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_force_units(Model source) {
    opensimModelJNI.Model_copyProperty_force_units(swigCPtr, this, Model.getCPtr(source), source);
  }

  public String get_force_units(int i) {
    return opensimModelJNI.Model_get_force_units__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_std__string upd_force_units(int i) {
    return new SWIGTYPE_p_std__string(opensimModelJNI.Model_upd_force_units__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_force_units(int i, String value) {
    opensimModelJNI.Model_set_force_units__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_force_units(String value) {
    return opensimModelJNI.Model_append_force_units(swigCPtr, this, value);
  }

  public void constructProperty_force_units(String initValue) {
    opensimModelJNI.Model_constructProperty_force_units(swigCPtr, this, initValue);
  }

  public String get_force_units() {
    return opensimModelJNI.Model_get_force_units__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_std__string upd_force_units() {
    return new SWIGTYPE_p_std__string(opensimModelJNI.Model_upd_force_units__SWIG_1(swigCPtr, this), false);
  }

  public void set_force_units(String value) {
    opensimModelJNI.Model_set_force_units__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_ControllerSet(Model source) {
    opensimModelJNI.Model_copyProperty_ControllerSet(swigCPtr, this, Model.getCPtr(source), source);
  }

  public ControllerSet get_ControllerSet(int i) {
    return new ControllerSet(opensimModelJNI.Model_get_ControllerSet__SWIG_0(swigCPtr, this, i), false);
  }

  public ControllerSet upd_ControllerSet(int i) {
    return new ControllerSet(opensimModelJNI.Model_upd_ControllerSet__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_ControllerSet(int i, ControllerSet value) {
    opensimModelJNI.Model_set_ControllerSet__SWIG_0(swigCPtr, this, i, ControllerSet.getCPtr(value), value);
  }

  public int append_ControllerSet(ControllerSet value) {
    return opensimModelJNI.Model_append_ControllerSet(swigCPtr, this, ControllerSet.getCPtr(value), value);
  }

  public void constructProperty_ControllerSet(ControllerSet initValue) {
    opensimModelJNI.Model_constructProperty_ControllerSet(swigCPtr, this, ControllerSet.getCPtr(initValue), initValue);
  }

  public ControllerSet get_ControllerSet() {
    return new ControllerSet(opensimModelJNI.Model_get_ControllerSet__SWIG_1(swigCPtr, this), false);
  }

  public ControllerSet upd_ControllerSet() {
    return new ControllerSet(opensimModelJNI.Model_upd_ControllerSet__SWIG_1(swigCPtr, this), false);
  }

  public void set_ControllerSet(ControllerSet value) {
    opensimModelJNI.Model_set_ControllerSet__SWIG_1(swigCPtr, this, ControllerSet.getCPtr(value), value);
  }

  public void copyProperty_ConstraintSet(Model source) {
    opensimModelJNI.Model_copyProperty_ConstraintSet(swigCPtr, this, Model.getCPtr(source), source);
  }

  public ConstraintSet get_ConstraintSet(int i) {
    return new ConstraintSet(opensimModelJNI.Model_get_ConstraintSet__SWIG_0(swigCPtr, this, i), false);
  }

  public ConstraintSet upd_ConstraintSet(int i) {
    return new ConstraintSet(opensimModelJNI.Model_upd_ConstraintSet__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_ConstraintSet(int i, ConstraintSet value) {
    opensimModelJNI.Model_set_ConstraintSet__SWIG_0(swigCPtr, this, i, ConstraintSet.getCPtr(value), value);
  }

  public int append_ConstraintSet(ConstraintSet value) {
    return opensimModelJNI.Model_append_ConstraintSet(swigCPtr, this, ConstraintSet.getCPtr(value), value);
  }

  public void constructProperty_ConstraintSet(ConstraintSet initValue) {
    opensimModelJNI.Model_constructProperty_ConstraintSet(swigCPtr, this, ConstraintSet.getCPtr(initValue), initValue);
  }

  public ConstraintSet get_ConstraintSet() {
    return new ConstraintSet(opensimModelJNI.Model_get_ConstraintSet__SWIG_1(swigCPtr, this), false);
  }

  public ConstraintSet upd_ConstraintSet() {
    return new ConstraintSet(opensimModelJNI.Model_upd_ConstraintSet__SWIG_1(swigCPtr, this), false);
  }

  public void set_ConstraintSet(ConstraintSet value) {
    opensimModelJNI.Model_set_ConstraintSet__SWIG_1(swigCPtr, this, ConstraintSet.getCPtr(value), value);
  }

  public void copyProperty_ForceSet(Model source) {
    opensimModelJNI.Model_copyProperty_ForceSet(swigCPtr, this, Model.getCPtr(source), source);
  }

  public ForceSet get_ForceSet(int i) {
    return new ForceSet(opensimModelJNI.Model_get_ForceSet__SWIG_0(swigCPtr, this, i), false);
  }

  public ForceSet upd_ForceSet(int i) {
    return new ForceSet(opensimModelJNI.Model_upd_ForceSet__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_ForceSet(int i, ForceSet value) {
    opensimModelJNI.Model_set_ForceSet__SWIG_0(swigCPtr, this, i, ForceSet.getCPtr(value), value);
  }

  public int append_ForceSet(ForceSet value) {
    return opensimModelJNI.Model_append_ForceSet(swigCPtr, this, ForceSet.getCPtr(value), value);
  }

  public void constructProperty_ForceSet(ForceSet initValue) {
    opensimModelJNI.Model_constructProperty_ForceSet(swigCPtr, this, ForceSet.getCPtr(initValue), initValue);
  }

  public ForceSet get_ForceSet() {
    return new ForceSet(opensimModelJNI.Model_get_ForceSet__SWIG_1(swigCPtr, this), false);
  }

  public ForceSet upd_ForceSet() {
    return new ForceSet(opensimModelJNI.Model_upd_ForceSet__SWIG_1(swigCPtr, this), false);
  }

  public void set_ForceSet(ForceSet value) {
    opensimModelJNI.Model_set_ForceSet__SWIG_1(swigCPtr, this, ForceSet.getCPtr(value), value);
  }

  public void copyProperty_MarkerSet(Model source) {
    opensimModelJNI.Model_copyProperty_MarkerSet(swigCPtr, this, Model.getCPtr(source), source);
  }

  public MarkerSet get_MarkerSet(int i) {
    return new MarkerSet(opensimModelJNI.Model_get_MarkerSet__SWIG_0(swigCPtr, this, i), false);
  }

  public MarkerSet upd_MarkerSet(int i) {
    return new MarkerSet(opensimModelJNI.Model_upd_MarkerSet__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_MarkerSet(int i, MarkerSet value) {
    opensimModelJNI.Model_set_MarkerSet__SWIG_0(swigCPtr, this, i, MarkerSet.getCPtr(value), value);
  }

  public int append_MarkerSet(MarkerSet value) {
    return opensimModelJNI.Model_append_MarkerSet(swigCPtr, this, MarkerSet.getCPtr(value), value);
  }

  public void constructProperty_MarkerSet(MarkerSet initValue) {
    opensimModelJNI.Model_constructProperty_MarkerSet(swigCPtr, this, MarkerSet.getCPtr(initValue), initValue);
  }

  public MarkerSet get_MarkerSet() {
    return new MarkerSet(opensimModelJNI.Model_get_MarkerSet__SWIG_1(swigCPtr, this), false);
  }

  public MarkerSet upd_MarkerSet() {
    return new MarkerSet(opensimModelJNI.Model_upd_MarkerSet__SWIG_1(swigCPtr, this), false);
  }

  public void set_MarkerSet(MarkerSet value) {
    opensimModelJNI.Model_set_MarkerSet__SWIG_1(swigCPtr, this, MarkerSet.getCPtr(value), value);
  }

  public void copyProperty_ContactGeometrySet(Model source) {
    opensimModelJNI.Model_copyProperty_ContactGeometrySet(swigCPtr, this, Model.getCPtr(source), source);
  }

  public ContactGeometrySet get_ContactGeometrySet(int i) {
    return new ContactGeometrySet(opensimModelJNI.Model_get_ContactGeometrySet__SWIG_0(swigCPtr, this, i), false);
  }

  public ContactGeometrySet upd_ContactGeometrySet(int i) {
    return new ContactGeometrySet(opensimModelJNI.Model_upd_ContactGeometrySet__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_ContactGeometrySet(int i, ContactGeometrySet value) {
    opensimModelJNI.Model_set_ContactGeometrySet__SWIG_0(swigCPtr, this, i, ContactGeometrySet.getCPtr(value), value);
  }

  public int append_ContactGeometrySet(ContactGeometrySet value) {
    return opensimModelJNI.Model_append_ContactGeometrySet(swigCPtr, this, ContactGeometrySet.getCPtr(value), value);
  }

  public void constructProperty_ContactGeometrySet(ContactGeometrySet initValue) {
    opensimModelJNI.Model_constructProperty_ContactGeometrySet(swigCPtr, this, ContactGeometrySet.getCPtr(initValue), initValue);
  }

  public ContactGeometrySet get_ContactGeometrySet() {
    return new ContactGeometrySet(opensimModelJNI.Model_get_ContactGeometrySet__SWIG_1(swigCPtr, this), false);
  }

  public ContactGeometrySet upd_ContactGeometrySet() {
    return new ContactGeometrySet(opensimModelJNI.Model_upd_ContactGeometrySet__SWIG_1(swigCPtr, this), false);
  }

  public void set_ContactGeometrySet(ContactGeometrySet value) {
    opensimModelJNI.Model_set_ContactGeometrySet__SWIG_1(swigCPtr, this, ContactGeometrySet.getCPtr(value), value);
  }

  public void copyProperty_ComponentSet(Model source) {
    opensimModelJNI.Model_copyProperty_ComponentSet(swigCPtr, this, Model.getCPtr(source), source);
  }

  public ComponentSet get_ComponentSet(int i) {
    return new ComponentSet(opensimModelJNI.Model_get_ComponentSet__SWIG_0(swigCPtr, this, i), false);
  }

  public ComponentSet upd_ComponentSet(int i) {
    return new ComponentSet(opensimModelJNI.Model_upd_ComponentSet__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_ComponentSet(int i, ComponentSet value) {
    opensimModelJNI.Model_set_ComponentSet__SWIG_0(swigCPtr, this, i, ComponentSet.getCPtr(value), value);
  }

  public int append_ComponentSet(ComponentSet value) {
    return opensimModelJNI.Model_append_ComponentSet(swigCPtr, this, ComponentSet.getCPtr(value), value);
  }

  public void constructProperty_ComponentSet(ComponentSet initValue) {
    opensimModelJNI.Model_constructProperty_ComponentSet(swigCPtr, this, ComponentSet.getCPtr(initValue), initValue);
  }

  public ComponentSet get_ComponentSet() {
    return new ComponentSet(opensimModelJNI.Model_get_ComponentSet__SWIG_1(swigCPtr, this), false);
  }

  public ComponentSet upd_ComponentSet() {
    return new ComponentSet(opensimModelJNI.Model_upd_ComponentSet__SWIG_1(swigCPtr, this), false);
  }

  public void set_ComponentSet(ComponentSet value) {
    opensimModelJNI.Model_set_ComponentSet__SWIG_1(swigCPtr, this, ComponentSet.getCPtr(value), value);
  }

  public void copyProperty_ProbeSet(Model source) {
    opensimModelJNI.Model_copyProperty_ProbeSet(swigCPtr, this, Model.getCPtr(source), source);
  }

  public ProbeSet get_ProbeSet(int i) {
    return new ProbeSet(opensimModelJNI.Model_get_ProbeSet__SWIG_0(swigCPtr, this, i), false);
  }

  public ProbeSet upd_ProbeSet(int i) {
    return new ProbeSet(opensimModelJNI.Model_upd_ProbeSet__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_ProbeSet(int i, ProbeSet value) {
    opensimModelJNI.Model_set_ProbeSet__SWIG_0(swigCPtr, this, i, ProbeSet.getCPtr(value), value);
  }

  public int append_ProbeSet(ProbeSet value) {
    return opensimModelJNI.Model_append_ProbeSet(swigCPtr, this, ProbeSet.getCPtr(value), value);
  }

  public void constructProperty_ProbeSet(ProbeSet initValue) {
    opensimModelJNI.Model_constructProperty_ProbeSet(swigCPtr, this, ProbeSet.getCPtr(initValue), initValue);
  }

  public ProbeSet get_ProbeSet() {
    return new ProbeSet(opensimModelJNI.Model_get_ProbeSet__SWIG_1(swigCPtr, this), false);
  }

  public ProbeSet upd_ProbeSet() {
    return new ProbeSet(opensimModelJNI.Model_upd_ProbeSet__SWIG_1(swigCPtr, this), false);
  }

  public void set_ProbeSet(ProbeSet value) {
    opensimModelJNI.Model_set_ProbeSet__SWIG_1(swigCPtr, this, ProbeSet.getCPtr(value), value);
  }

  public void copyProperty_BodySet(Model source) {
    opensimModelJNI.Model_copyProperty_BodySet(swigCPtr, this, Model.getCPtr(source), source);
  }

  public BodySet get_BodySet(int i) {
    return new BodySet(opensimModelJNI.Model_get_BodySet__SWIG_0(swigCPtr, this, i), false);
  }

  public BodySet upd_BodySet(int i) {
    return new BodySet(opensimModelJNI.Model_upd_BodySet__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_BodySet(int i, BodySet value) {
    opensimModelJNI.Model_set_BodySet__SWIG_0(swigCPtr, this, i, BodySet.getCPtr(value), value);
  }

  public int append_BodySet(BodySet value) {
    return opensimModelJNI.Model_append_BodySet(swigCPtr, this, BodySet.getCPtr(value), value);
  }

  public void constructProperty_BodySet(BodySet initValue) {
    opensimModelJNI.Model_constructProperty_BodySet(swigCPtr, this, BodySet.getCPtr(initValue), initValue);
  }

  public BodySet get_BodySet() {
    return new BodySet(opensimModelJNI.Model_get_BodySet__SWIG_1(swigCPtr, this), false);
  }

  public BodySet upd_BodySet() {
    return new BodySet(opensimModelJNI.Model_upd_BodySet__SWIG_1(swigCPtr, this), false);
  }

  public void set_BodySet(BodySet value) {
    opensimModelJNI.Model_set_BodySet__SWIG_1(swigCPtr, this, BodySet.getCPtr(value), value);
  }

  public void copyProperty_JointSet(Model source) {
    opensimModelJNI.Model_copyProperty_JointSet(swigCPtr, this, Model.getCPtr(source), source);
  }

  public JointSet get_JointSet(int i) {
    return new JointSet(opensimModelJNI.Model_get_JointSet__SWIG_0(swigCPtr, this, i), false);
  }

  public JointSet upd_JointSet(int i) {
    return new JointSet(opensimModelJNI.Model_upd_JointSet__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_JointSet(int i, JointSet value) {
    opensimModelJNI.Model_set_JointSet__SWIG_0(swigCPtr, this, i, JointSet.getCPtr(value), value);
  }

  public int append_JointSet(JointSet value) {
    return opensimModelJNI.Model_append_JointSet(swigCPtr, this, JointSet.getCPtr(value), value);
  }

  public void constructProperty_JointSet(JointSet initValue) {
    opensimModelJNI.Model_constructProperty_JointSet(swigCPtr, this, JointSet.getCPtr(initValue), initValue);
  }

  public JointSet get_JointSet() {
    return new JointSet(opensimModelJNI.Model_get_JointSet__SWIG_1(swigCPtr, this), false);
  }

  public JointSet upd_JointSet() {
    return new JointSet(opensimModelJNI.Model_upd_JointSet__SWIG_1(swigCPtr, this), false);
  }

  public void set_JointSet(JointSet value) {
    opensimModelJNI.Model_set_JointSet__SWIG_1(swigCPtr, this, JointSet.getCPtr(value), value);
  }

  public void copyProperty_FrameSet(Model source) {
    opensimModelJNI.Model_copyProperty_FrameSet(swigCPtr, this, Model.getCPtr(source), source);
  }

  public FrameSet get_FrameSet(int i) {
    return new FrameSet(opensimModelJNI.Model_get_FrameSet__SWIG_0(swigCPtr, this, i), false);
  }

  public FrameSet upd_FrameSet(int i) {
    return new FrameSet(opensimModelJNI.Model_upd_FrameSet__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_FrameSet(int i, FrameSet value) {
    opensimModelJNI.Model_set_FrameSet__SWIG_0(swigCPtr, this, i, FrameSet.getCPtr(value), value);
  }

  public int append_FrameSet(FrameSet value) {
    return opensimModelJNI.Model_append_FrameSet(swigCPtr, this, FrameSet.getCPtr(value), value);
  }

  public void constructProperty_FrameSet(FrameSet initValue) {
    opensimModelJNI.Model_constructProperty_FrameSet(swigCPtr, this, FrameSet.getCPtr(initValue), initValue);
  }

  public FrameSet get_FrameSet() {
    return new FrameSet(opensimModelJNI.Model_get_FrameSet__SWIG_1(swigCPtr, this), false);
  }

  public FrameSet upd_FrameSet() {
    return new FrameSet(opensimModelJNI.Model_upd_FrameSet__SWIG_1(swigCPtr, this), false);
  }

  public void set_FrameSet(FrameSet value) {
    opensimModelJNI.Model_set_FrameSet__SWIG_1(swigCPtr, this, FrameSet.getCPtr(value), value);
  }

  public void copyProperty_ModelVisualPreferences(Model source) {
    opensimModelJNI.Model_copyProperty_ModelVisualPreferences(swigCPtr, this, Model.getCPtr(source), source);
  }

  public ModelVisualPreferences get_ModelVisualPreferences(int i) {
    return new ModelVisualPreferences(opensimModelJNI.Model_get_ModelVisualPreferences__SWIG_0(swigCPtr, this, i), false);
  }

  public ModelVisualPreferences upd_ModelVisualPreferences(int i) {
    return new ModelVisualPreferences(opensimModelJNI.Model_upd_ModelVisualPreferences__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_ModelVisualPreferences(int i, ModelVisualPreferences value) {
    opensimModelJNI.Model_set_ModelVisualPreferences__SWIG_0(swigCPtr, this, i, ModelVisualPreferences.getCPtr(value), value);
  }

  public int append_ModelVisualPreferences(ModelVisualPreferences value) {
    return opensimModelJNI.Model_append_ModelVisualPreferences(swigCPtr, this, ModelVisualPreferences.getCPtr(value), value);
  }

  public void constructProperty_ModelVisualPreferences(ModelVisualPreferences initValue) {
    opensimModelJNI.Model_constructProperty_ModelVisualPreferences(swigCPtr, this, ModelVisualPreferences.getCPtr(initValue), initValue);
  }

  public ModelVisualPreferences get_ModelVisualPreferences() {
    return new ModelVisualPreferences(opensimModelJNI.Model_get_ModelVisualPreferences__SWIG_1(swigCPtr, this), false);
  }

  public ModelVisualPreferences upd_ModelVisualPreferences() {
    return new ModelVisualPreferences(opensimModelJNI.Model_upd_ModelVisualPreferences__SWIG_1(swigCPtr, this), false);
  }

  public void set_ModelVisualPreferences(ModelVisualPreferences value) {
    opensimModelJNI.Model_set_ModelVisualPreferences__SWIG_1(swigCPtr, this, ModelVisualPreferences.getCPtr(value), value);
  }

  public Model() {
    this(opensimModelJNI.new_Model__SWIG_0(), true);
  }

  public Model(String filename, boolean finalize) throws java.io.IOException {
    this(opensimModelJNI.new_Model__SWIG_1(filename, finalize), true);
  }

  public Model(String filename) throws java.io.IOException {
    this(opensimModelJNI.new_Model__SWIG_2(filename), true);
  }

  public void setup() throws java.io.IOException {
    opensimModelJNI.Model_setup(swigCPtr, this);
  }

  public void cleanup() {
    opensimModelJNI.Model_cleanup(swigCPtr, this);
  }

  public ModelDisplayHints getDisplayHints() {
    return new ModelDisplayHints(opensimModelJNI.Model_getDisplayHints(swigCPtr, this), false);
  }

  public ModelDisplayHints updDisplayHints() {
    return new ModelDisplayHints(opensimModelJNI.Model_updDisplayHints(swigCPtr, this), false);
  }

  public void setUseVisualizer(boolean visualize) {
    opensimModelJNI.Model_setUseVisualizer(swigCPtr, this, visualize);
  }

  public boolean getUseVisualizer() {
    return opensimModelJNI.Model_getUseVisualizer(swigCPtr, this);
  }

  public boolean hasVisualizer() {
    return opensimModelJNI.Model_hasVisualizer(swigCPtr, this);
  }

  public ModelVisualizer getVisualizer() {
    return new ModelVisualizer(opensimModelJNI.Model_getVisualizer(swigCPtr, this), false);
  }

  public ModelVisualizer updVisualizer() {
    return new ModelVisualizer(opensimModelJNI.Model_updVisualizer(swigCPtr, this), false);
  }

  public void buildSystem() {
    opensimModelJNI.Model_buildSystem(swigCPtr, this);
  }

  public State initializeState() {
    return new State(opensimModelJNI.Model_initializeState(swigCPtr, this), false);
  }

  public State initSystem() throws java.io.IOException {
    return new State(opensimModelJNI.Model_initSystem(swigCPtr, this), false);
  }

  public State getWorkingState() {
    return new State(opensimModelJNI.Model_getWorkingState(swigCPtr, this), false);
  }

  public State updWorkingState() {
    return new State(opensimModelJNI.Model_updWorkingState(swigCPtr, this), false);
  }

  public void initStateWithoutRecreatingSystem(State state) {
    opensimModelJNI.Model_initStateWithoutRecreatingSystem(swigCPtr, this, State.getCPtr(state), state);
  }

  public void invalidateSystem() {
    opensimModelJNI.Model_invalidateSystem(swigCPtr, this);
  }

  public boolean isValidSystem() {
    return opensimModelJNI.Model_isValidSystem(swigCPtr, this);
  }

  public void formStateStorage(Storage originalStorage, Storage statesStorage) {
    opensimModelJNI.Model_formStateStorage(swigCPtr, this, Storage.getCPtr(originalStorage), originalStorage, Storage.getCPtr(statesStorage), statesStorage);
  }

  public void formQStorage(Storage originalStorage, Storage qStorage) {
    opensimModelJNI.Model_formQStorage(swigCPtr, this, Storage.getCPtr(originalStorage), originalStorage, Storage.getCPtr(qStorage), qStorage);
  }

  public void updateAssemblyConditions(State s) {
    opensimModelJNI.Model_updateAssemblyConditions(swigCPtr, this, State.getCPtr(s), s);
  }

  public void assemble(State state, Coordinate coord, double weight) {
    opensimModelJNI.Model_assemble__SWIG_0(swigCPtr, this, State.getCPtr(state), state, Coordinate.getCPtr(coord), coord, weight);
  }

  public void assemble(State state, Coordinate coord) {
    opensimModelJNI.Model_assemble__SWIG_1(swigCPtr, this, State.getCPtr(state), state, Coordinate.getCPtr(coord), coord);
  }

  public void assemble(State state) {
    opensimModelJNI.Model_assemble__SWIG_2(swigCPtr, this, State.getCPtr(state), state);
  }

  public void equilibrateMuscles(State state) {
    opensimModelJNI.Model_equilibrateMuscles(swigCPtr, this, State.getCPtr(state), state);
  }

  public SWIGTYPE_p_SimTK__MultibodySystem getMultibodySystem() {
    return new SWIGTYPE_p_SimTK__MultibodySystem(opensimModelJNI.Model_getMultibodySystem(swigCPtr, this), false);
  }

  public SWIGTYPE_p_SimTK__MultibodySystem updMultibodySystem() {
    return new SWIGTYPE_p_SimTK__MultibodySystem(opensimModelJNI.Model_updMultibodySystem(swigCPtr, this), false);
  }

  public SWIGTYPE_p_SimTK__DefaultSystemSubsystem getDefaultSubsystem() {
    return new SWIGTYPE_p_SimTK__DefaultSystemSubsystem(opensimModelJNI.Model_getDefaultSubsystem(swigCPtr, this), false);
  }

  public SWIGTYPE_p_SimTK__DefaultSystemSubsystem updDefaultSubsystem() {
    return new SWIGTYPE_p_SimTK__DefaultSystemSubsystem(opensimModelJNI.Model_updDefaultSubsystem(swigCPtr, this), false);
  }

  public SWIGTYPE_p_SimTK__SimbodyMatterSubsystem getMatterSubsystem() {
    return new SWIGTYPE_p_SimTK__SimbodyMatterSubsystem(opensimModelJNI.Model_getMatterSubsystem(swigCPtr, this), false);
  }

  public SWIGTYPE_p_SimTK__SimbodyMatterSubsystem updMatterSubsystem() {
    return new SWIGTYPE_p_SimTK__SimbodyMatterSubsystem(opensimModelJNI.Model_updMatterSubsystem(swigCPtr, this), false);
  }

  public SWIGTYPE_p_SimTK__Force__Gravity getGravityForce() {
    return new SWIGTYPE_p_SimTK__Force__Gravity(opensimModelJNI.Model_getGravityForce(swigCPtr, this), false);
  }

  public SWIGTYPE_p_SimTK__Force__Gravity updGravityForce() {
    return new SWIGTYPE_p_SimTK__Force__Gravity(opensimModelJNI.Model_updGravityForce(swigCPtr, this), false);
  }

  public SWIGTYPE_p_SimTK__GeneralForceSubsystem getForceSubsystem() {
    return new SWIGTYPE_p_SimTK__GeneralForceSubsystem(opensimModelJNI.Model_getForceSubsystem(swigCPtr, this), false);
  }

  public SWIGTYPE_p_SimTK__GeneralForceSubsystem updForceSubsystem() {
    return new SWIGTYPE_p_SimTK__GeneralForceSubsystem(opensimModelJNI.Model_updForceSubsystem(swigCPtr, this), false);
  }

  public void realizeTime(State state) {
    opensimModelJNI.Model_realizeTime(swigCPtr, this, State.getCPtr(state), state);
  }

  public void realizePosition(State state) {
    opensimModelJNI.Model_realizePosition(swigCPtr, this, State.getCPtr(state), state);
  }

  public void realizeVelocity(State state) {
    opensimModelJNI.Model_realizeVelocity(swigCPtr, this, State.getCPtr(state), state);
  }

  public void realizeDynamics(State state) {
    opensimModelJNI.Model_realizeDynamics(swigCPtr, this, State.getCPtr(state), state);
  }

  public void realizeAcceleration(State state) {
    opensimModelJNI.Model_realizeAcceleration(swigCPtr, this, State.getCPtr(state), state);
  }

  public void realizeReport(State state) {
    opensimModelJNI.Model_realizeReport(swigCPtr, this, State.getCPtr(state), state);
  }

  private void private_addModelComponent(ModelComponent aModelComponent) {
    opensimModelJNI.Model_private_addModelComponent(swigCPtr, this, ModelComponent.getCPtr(aModelComponent), aModelComponent);
  }

  private void private_addBody(Body body) {
    opensimModelJNI.Model_private_addBody(swigCPtr, this, Body.getCPtr(body), body);
  }

  public void addJoint(Joint joint) {
    opensimModelJNI.Model_addJoint(swigCPtr, this, Joint.getCPtr(joint), joint);
  }

  private void private_addConstraint(Constraint constraint) {
    opensimModelJNI.Model_private_addConstraint(swigCPtr, this, Constraint.getCPtr(constraint), constraint);
  }

  private void private_addForce(Force force) {
    opensimModelJNI.Model_private_addForce(swigCPtr, this, Force.getCPtr(force), force);
  }

  private void private_addProbe(Probe probe) {
    opensimModelJNI.Model_private_addProbe(swigCPtr, this, Probe.getCPtr(probe), probe);
  }

  private void private_addContactGeometry(ContactGeometry contactGeometry) {
    opensimModelJNI.Model_private_addContactGeometry(swigCPtr, this, ContactGeometry.getCPtr(contactGeometry), contactGeometry);
  }

  public void addFrame(Frame frame) {
    opensimModelJNI.Model_addFrame(swigCPtr, this, Frame.getCPtr(frame), frame);
  }

  public void addMarker(Marker marker) {
    opensimModelJNI.Model_addMarker(swigCPtr, this, Marker.getCPtr(marker), marker);
  }

  public void removeProbe(Probe probe) {
    opensimModelJNI.Model_removeProbe(swigCPtr, this, Probe.getCPtr(probe), probe);
  }

  public String getInputFileName() {
    return opensimModelJNI.Model_getInputFileName(swigCPtr, this);
  }

  public void setInputFileName(String fileName) {
    opensimModelJNI.Model_setInputFileName(swigCPtr, this, fileName);
  }

  public String getCredits() {
    return opensimModelJNI.Model_getCredits(swigCPtr, this);
  }

  public void setAuthors(String aCredits) {
    opensimModelJNI.Model_setAuthors(swigCPtr, this, aCredits);
  }

  public String getPublications() {
    return opensimModelJNI.Model_getPublications(swigCPtr, this);
  }

  public void setPublications(String aPublications) {
    opensimModelJNI.Model_setPublications(swigCPtr, this, aPublications);
  }

  public Units getLengthUnits() {
    return new Units(opensimModelJNI.Model_getLengthUnits(swigCPtr, this), false);
  }

  public Units getForceUnits() {
    return new Units(opensimModelJNI.Model_getForceUnits(swigCPtr, this), false);
  }

  public Vec3 getGravity() {
    return new Vec3(opensimModelJNI.Model_getGravity(swigCPtr, this), true);
  }

  public boolean setGravity(Vec3 aGrav) {
    return opensimModelJNI.Model_setGravity(swigCPtr, this, Vec3.getCPtr(aGrav), aGrav);
  }

  public int getNumMarkers() {
    return opensimModelJNI.Model_getNumMarkers(swigCPtr, this);
  }

  public int getNumContactGeometries() {
    return opensimModelJNI.Model_getNumContactGeometries(swigCPtr, this);
  }

  public int getNumBodies() {
    return opensimModelJNI.Model_getNumBodies(swigCPtr, this);
  }

  public int getNumFrames() {
    return opensimModelJNI.Model_getNumFrames(swigCPtr, this);
  }

  public int getNumJoints() {
    return opensimModelJNI.Model_getNumJoints(swigCPtr, this);
  }

  public int getNumCoordinates() {
    return opensimModelJNI.Model_getNumCoordinates(swigCPtr, this);
  }

  public int getNumSpeeds() {
    return opensimModelJNI.Model_getNumSpeeds(swigCPtr, this);
  }

  public int getNumConstraints() {
    return opensimModelJNI.Model_getNumConstraints(swigCPtr, this);
  }

  public int getNumProbes() {
    return opensimModelJNI.Model_getNumProbes(swigCPtr, this);
  }

  public SetActuators getActuators() {
    return new SetActuators(opensimModelJNI.Model_getActuators(swigCPtr, this), false);
  }

  public SetActuators updActuators() {
    return new SetActuators(opensimModelJNI.Model_updActuators(swigCPtr, this), false);
  }

  public SetMuscles getMuscles() {
    return new SetMuscles(opensimModelJNI.Model_getMuscles(swigCPtr, this), false);
  }

  public SetMuscles updMuscles() {
    return new SetMuscles(opensimModelJNI.Model_updMuscles(swigCPtr, this), false);
  }

  public ForceSet getForceSet() {
    return new ForceSet(opensimModelJNI.Model_getForceSet(swigCPtr, this), false);
  }

  public ForceSet updForceSet() {
    return new ForceSet(opensimModelJNI.Model_updForceSet(swigCPtr, this), false);
  }

  public ProbeSet getProbeSet() {
    return new ProbeSet(opensimModelJNI.Model_getProbeSet(swigCPtr, this), false);
  }

  public ProbeSet updProbeSet() {
    return new ProbeSet(opensimModelJNI.Model_updProbeSet(swigCPtr, this), false);
  }

  public ComponentSet getMiscModelComponentSet() {
    return new ComponentSet(opensimModelJNI.Model_getMiscModelComponentSet(swigCPtr, this), false);
  }

  public ComponentSet updMiscModelComponentSet() {
    return new ComponentSet(opensimModelJNI.Model_updMiscModelComponentSet(swigCPtr, this), false);
  }

  public int getNumAnalyses() {
    return opensimModelJNI.Model_getNumAnalyses(swigCPtr, this);
  }

  public int getNumControls() {
    return opensimModelJNI.Model_getNumControls(swigCPtr, this);
  }

  public Vector updDefaultControls() {
    return new Vector(opensimModelJNI.Model_updDefaultControls(swigCPtr, this), false);
  }

  public void setDefaultControls(Vector controls) {
    opensimModelJNI.Model_setDefaultControls__SWIG_0(swigCPtr, this, Vector.getCPtr(controls), controls);
  }

  public Vector getDefaultControls() {
    return new Vector(opensimModelJNI.Model_getDefaultControls(swigCPtr, this), false);
  }

  public Vector updControls(State s) {
    return new Vector(opensimModelJNI.Model_updControls(swigCPtr, this, State.getCPtr(s), s), false);
  }

  public void markControlsAsValid(State s) {
    opensimModelJNI.Model_markControlsAsValid(swigCPtr, this, State.getCPtr(s), s);
  }

  public void setControls(State s, Vector controls) {
    opensimModelJNI.Model_setControls(swigCPtr, this, State.getCPtr(s), s, Vector.getCPtr(controls), controls);
  }

  public Vector getControls(State s) {
    return new Vector(opensimModelJNI.Model_getControls(swigCPtr, this, State.getCPtr(s), s), false);
  }

  public void computeControls(State state, Vector controls) {
    opensimModelJNI.Model_computeControls(swigCPtr, this, State.getCPtr(state), state, Vector.getCPtr(controls), controls);
  }

  public boolean isControlled() {
    return opensimModelJNI.Model_isControlled(swigCPtr, this);
  }

  public void storeControls(State s, int step) {
    opensimModelJNI.Model_storeControls(swigCPtr, this, State.getCPtr(s), s, step);
  }

  public void printControlStorage(String fileName) {
    opensimModelJNI.Model_printControlStorage(swigCPtr, this, fileName);
  }

  public ControllerSet getControllerSet() {
    return new ControllerSet(opensimModelJNI.Model_getControllerSet(swigCPtr, this), false);
  }

  public ControllerSet updControllerSet() {
    return new ControllerSet(opensimModelJNI.Model_updControllerSet(swigCPtr, this), false);
  }

  public boolean getAllControllersEnabled() {
    return opensimModelJNI.Model_getAllControllersEnabled(swigCPtr, this);
  }

  public void setAllControllersEnabled(boolean enabled) {
    opensimModelJNI.Model_setAllControllersEnabled(swigCPtr, this, enabled);
  }

  public void applyDefaultConfiguration(State s) {
    opensimModelJNI.Model_applyDefaultConfiguration(swigCPtr, this, State.getCPtr(s), s);
  }

  public SimbodyEngine getSimbodyEngine() {
    return new SimbodyEngine(opensimModelJNI.Model_getSimbodyEngine(swigCPtr, this), false);
  }

  public SimbodyEngine updSimbodyEngine() {
    return new SimbodyEngine(opensimModelJNI.Model_updSimbodyEngine(swigCPtr, this), false);
  }

  public void computeStateVariableDerivatives(State s) {
    opensimModelJNI.Model_computeStateVariableDerivatives(swigCPtr, this, State.getCPtr(s), s);
  }

  public double getTotalMass(State s) {
    return opensimModelJNI.Model_getTotalMass(swigCPtr, this, State.getCPtr(s), s);
  }

  public Inertia getInertiaAboutMassCenter(State s) {
    return new Inertia(opensimModelJNI.Model_getInertiaAboutMassCenter(swigCPtr, this, State.getCPtr(s), s), true);
  }

  public Vec3 calcMassCenterPosition(State s) {
    return new Vec3(opensimModelJNI.Model_calcMassCenterPosition(swigCPtr, this, State.getCPtr(s), s), true);
  }

  public Vec3 calcMassCenterVelocity(State s) {
    return new Vec3(opensimModelJNI.Model_calcMassCenterVelocity(swigCPtr, this, State.getCPtr(s), s), true);
  }

  public Vec3 calcMassCenterAcceleration(State s) {
    return new Vec3(opensimModelJNI.Model_calcMassCenterAcceleration(swigCPtr, this, State.getCPtr(s), s), true);
  }

  public int getNumMuscleStates() {
    return opensimModelJNI.Model_getNumMuscleStates(swigCPtr, this);
  }

  public int getNumProbeStates() {
    return opensimModelJNI.Model_getNumProbeStates(swigCPtr, this);
  }

  public CoordinateSet updCoordinateSet() {
    return new CoordinateSet(opensimModelJNI.Model_updCoordinateSet(swigCPtr, this), false);
  }

  public CoordinateSet getCoordinateSet() {
    return new CoordinateSet(opensimModelJNI.Model_getCoordinateSet(swigCPtr, this), false);
  }

  public BodySet updBodySet() {
    return new BodySet(opensimModelJNI.Model_updBodySet(swigCPtr, this), false);
  }

  public BodySet getBodySet() {
    return new BodySet(opensimModelJNI.Model_getBodySet(swigCPtr, this), false);
  }

  public JointSet updJointSet() {
    return new JointSet(opensimModelJNI.Model_updJointSet(swigCPtr, this), false);
  }

  public JointSet getJointSet() {
    return new JointSet(opensimModelJNI.Model_getJointSet(swigCPtr, this), false);
  }

  public AnalysisSet updAnalysisSet() {
    return new AnalysisSet(opensimModelJNI.Model_updAnalysisSet(swigCPtr, this), false);
  }

  public AnalysisSet getAnalysisSet() {
    return new AnalysisSet(opensimModelJNI.Model_getAnalysisSet(swigCPtr, this), false);
  }

  public ContactGeometrySet updContactGeometrySet() {
    return new ContactGeometrySet(opensimModelJNI.Model_updContactGeometrySet(swigCPtr, this), false);
  }

  public ContactGeometrySet getContactGeometrySet() {
    return new ContactGeometrySet(opensimModelJNI.Model_getContactGeometrySet(swigCPtr, this), false);
  }

  public Ground getGround() {
    return new Ground(opensimModelJNI.Model_getGround(swigCPtr, this), false);
  }

  public Ground updGround() {
    return new Ground(opensimModelJNI.Model_updGround(swigCPtr, this), false);
  }

  public FrameSet updFrameSet() {
    return new FrameSet(opensimModelJNI.Model_updFrameSet(swigCPtr, this), false);
  }

  public FrameSet getFrameSet() {
    return new FrameSet(opensimModelJNI.Model_getFrameSet(swigCPtr, this), false);
  }

  public ConstraintSet updConstraintSet() {
    return new ConstraintSet(opensimModelJNI.Model_updConstraintSet(swigCPtr, this), false);
  }

  public ConstraintSet getConstraintSet() {
    return new ConstraintSet(opensimModelJNI.Model_getConstraintSet(swigCPtr, this), false);
  }

  public MarkerSet updMarkerSet() {
    return new MarkerSet(opensimModelJNI.Model_updMarkerSet(swigCPtr, this), false);
  }

  public MarkerSet getMarkerSet() {
    return new MarkerSet(opensimModelJNI.Model_getMarkerSet(swigCPtr, this), false);
  }

  public int replaceMarkerSet(State s, MarkerSet aMarkerSet) {
    return opensimModelJNI.Model_replaceMarkerSet(swigCPtr, this, State.getCPtr(s), s, MarkerSet.getCPtr(aMarkerSet), aMarkerSet);
  }

  public void writeMarkerFile(String aFileName) {
    opensimModelJNI.Model_writeMarkerFile(swigCPtr, this, aFileName);
  }

  public void updateMarkerSet(MarkerSet aMarkerSet) {
    opensimModelJNI.Model_updateMarkerSet(swigCPtr, this, MarkerSet.getCPtr(aMarkerSet), aMarkerSet);
  }

  public int deleteUnusedMarkers(ArrayStr aMarkerNames) {
    return opensimModelJNI.Model_deleteUnusedMarkers(swigCPtr, this, ArrayStr.getCPtr(aMarkerNames), aMarkerNames);
  }

  private void private_addAnalysis(Analysis analysis) {
    opensimModelJNI.Model_private_addAnalysis(swigCPtr, this, Analysis.getCPtr(analysis), analysis);
  }

  private void private_addController(Controller aController) {
    opensimModelJNI.Model_private_addController(swigCPtr, this, Controller.getCPtr(aController), aController);
  }

  public void removeAnalysis(Analysis analysis, boolean deleteIt) {
    opensimModelJNI.Model_removeAnalysis__SWIG_0(swigCPtr, this, Analysis.getCPtr(analysis), analysis, deleteIt);
  }

  public void removeAnalysis(Analysis analysis) {
    opensimModelJNI.Model_removeAnalysis__SWIG_1(swigCPtr, this, Analysis.getCPtr(analysis), analysis);
  }

  public void removeController(Controller aController) {
    opensimModelJNI.Model_removeController(swigCPtr, this, Controller.getCPtr(aController), aController);
  }

  public boolean scale(State state, ScaleSet scaleSet, double finalMass, boolean preserveMassDist) {
    return opensimModelJNI.Model_scale__SWIG_0(swigCPtr, this, State.getCPtr(state), state, ScaleSet.getCPtr(scaleSet), scaleSet, finalMass, preserveMassDist);
  }

  public boolean scale(State state, ScaleSet scaleSet, double finalMass) {
    return opensimModelJNI.Model_scale__SWIG_1(swigCPtr, this, State.getCPtr(state), state, ScaleSet.getCPtr(scaleSet), scaleSet, finalMass);
  }

  public boolean scale(State state, ScaleSet scaleSet) {
    return opensimModelJNI.Model_scale__SWIG_2(swigCPtr, this, State.getCPtr(state), state, ScaleSet.getCPtr(scaleSet), scaleSet);
  }

  public void printBasicInfo(SWIGTYPE_p_std__ostream aOStream) {
    opensimModelJNI.Model_printBasicInfo(swigCPtr, this, SWIGTYPE_p_std__ostream.getCPtr(aOStream));
  }

  public void printDetailedInfo(State s, SWIGTYPE_p_std__ostream aOStream) {
    opensimModelJNI.Model_printDetailedInfo(swigCPtr, this, State.getCPtr(s), s, SWIGTYPE_p_std__ostream.getCPtr(aOStream));
  }

  public void disownAllComponents() {
    opensimModelJNI.Model_disownAllComponents(swigCPtr, this);
  }

  public void overrideAllActuators(State s, boolean flag) {
    opensimModelJNI.Model_overrideAllActuators(swigCPtr, this, State.getCPtr(s), s, flag);
  }

  public String getValidationLog() {
    return opensimModelJNI.Model_getValidationLog(swigCPtr, this);
  }

  public void clearValidationLog() {
    opensimModelJNI.Model_clearValidationLog(swigCPtr, this);
  }

  public OpenSimObject getObjectByTypeAndName(String typeString, String nameString) throws java.io.IOException {
    return new OpenSimObject(opensimModelJNI.Model_getObjectByTypeAndName(swigCPtr, this, typeString, nameString), false);
  }

  public void updateFromXMLNode(SWIGTYPE_p_SimTK__Xml__Element aNode, int versionNumber) {
    opensimModelJNI.Model_updateFromXMLNode__SWIG_0(swigCPtr, this, SWIGTYPE_p_SimTK__Xml__Element.getCPtr(aNode), versionNumber);
  }

  public void updateFromXMLNode(SWIGTYPE_p_SimTK__Xml__Element aNode) {
    opensimModelJNI.Model_updateFromXMLNode__SWIG_1(swigCPtr, this, SWIGTYPE_p_SimTK__Xml__Element.getCPtr(aNode));
  }

  public void extendFinalizeFromProperties() {
    opensimModelJNI.Model_extendFinalizeFromProperties(swigCPtr, this);
  }

  public void extendConnectToModel(Model model) {
    opensimModelJNI.Model_extendConnectToModel(swigCPtr, this, Model.getCPtr(model), model);
  }

  public void extendAddToSystem(SWIGTYPE_p_SimTK__MultibodySystem system) {
    opensimModelJNI.Model_extendAddToSystem(swigCPtr, this, SWIGTYPE_p_SimTK__MultibodySystem.getCPtr(system));
  }

  public void extendInitStateFromProperties(State state) {
    opensimModelJNI.Model_extendInitStateFromProperties(swigCPtr, this, State.getCPtr(state), state);
  }

  public void extendSetPropertiesFromState(State state) {
    opensimModelJNI.Model_extendSetPropertiesFromState(swigCPtr, this, State.getCPtr(state), state);
  }

  public void generateDecorations(boolean fixed, ModelDisplayHints hints, State state, ArrayDecorativeGeometry appendToThis) {
    opensimModelJNI.Model_generateDecorations(swigCPtr, this, fixed, ModelDisplayHints.getCPtr(hints), hints, State.getCPtr(state), state, ArrayDecorativeGeometry.getCPtr(appendToThis), appendToThis);
  }

  public static void LoadOpenSimLibrary(String libraryName) {
    opensimModelJNI.Model_LoadOpenSimLibrary(libraryName);
  }

}
