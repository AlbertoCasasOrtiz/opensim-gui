/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class PrescribedForce extends Force {
  private transient long swigCPtr;

  public PrescribedForce(long cPtr, boolean cMemoryOwn) {
    super(opensimModelSimulationJNI.PrescribedForce_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(PrescribedForce obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimModelSimulationJNI.delete_PrescribedForce(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static PrescribedForce safeDownCast(OpenSimObject obj) {
    long cPtr = opensimModelSimulationJNI.PrescribedForce_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new PrescribedForce(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimModelSimulationJNI.PrescribedForce_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimModelSimulationJNI.PrescribedForce_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimModelSimulationJNI.PrescribedForce_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new PrescribedForce(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimModelSimulationJNI.PrescribedForce_getConcreteClassName(swigCPtr, this);
  }

  public void copyProperty_pointIsGlobal(PrescribedForce source) {
    opensimModelSimulationJNI.PrescribedForce_copyProperty_pointIsGlobal(swigCPtr, this, PrescribedForce.getCPtr(source), source);
  }

  public boolean get_pointIsGlobal(int i) {
    return opensimModelSimulationJNI.PrescribedForce_get_pointIsGlobal__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_bool upd_pointIsGlobal(int i) {
    return new SWIGTYPE_p_bool(opensimModelSimulationJNI.PrescribedForce_upd_pointIsGlobal__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_pointIsGlobal(int i, boolean value) {
    opensimModelSimulationJNI.PrescribedForce_set_pointIsGlobal__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_pointIsGlobal(boolean value) {
    return opensimModelSimulationJNI.PrescribedForce_append_pointIsGlobal(swigCPtr, this, value);
  }

  public void constructProperty_pointIsGlobal(boolean initValue) {
    opensimModelSimulationJNI.PrescribedForce_constructProperty_pointIsGlobal(swigCPtr, this, initValue);
  }

  public boolean get_pointIsGlobal() {
    return opensimModelSimulationJNI.PrescribedForce_get_pointIsGlobal__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_bool upd_pointIsGlobal() {
    return new SWIGTYPE_p_bool(opensimModelSimulationJNI.PrescribedForce_upd_pointIsGlobal__SWIG_1(swigCPtr, this), false);
  }

  public void set_pointIsGlobal(boolean value) {
    opensimModelSimulationJNI.PrescribedForce_set_pointIsGlobal__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_forceIsGlobal(PrescribedForce source) {
    opensimModelSimulationJNI.PrescribedForce_copyProperty_forceIsGlobal(swigCPtr, this, PrescribedForce.getCPtr(source), source);
  }

  public boolean get_forceIsGlobal(int i) {
    return opensimModelSimulationJNI.PrescribedForce_get_forceIsGlobal__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_bool upd_forceIsGlobal(int i) {
    return new SWIGTYPE_p_bool(opensimModelSimulationJNI.PrescribedForce_upd_forceIsGlobal__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_forceIsGlobal(int i, boolean value) {
    opensimModelSimulationJNI.PrescribedForce_set_forceIsGlobal__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_forceIsGlobal(boolean value) {
    return opensimModelSimulationJNI.PrescribedForce_append_forceIsGlobal(swigCPtr, this, value);
  }

  public void constructProperty_forceIsGlobal(boolean initValue) {
    opensimModelSimulationJNI.PrescribedForce_constructProperty_forceIsGlobal(swigCPtr, this, initValue);
  }

  public boolean get_forceIsGlobal() {
    return opensimModelSimulationJNI.PrescribedForce_get_forceIsGlobal__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_bool upd_forceIsGlobal() {
    return new SWIGTYPE_p_bool(opensimModelSimulationJNI.PrescribedForce_upd_forceIsGlobal__SWIG_1(swigCPtr, this), false);
  }

  public void set_forceIsGlobal(boolean value) {
    opensimModelSimulationJNI.PrescribedForce_set_forceIsGlobal__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_forceFunctions(PrescribedForce source) {
    opensimModelSimulationJNI.PrescribedForce_copyProperty_forceFunctions(swigCPtr, this, PrescribedForce.getCPtr(source), source);
  }

  public FunctionSet get_forceFunctions(int i) {
    return new FunctionSet(opensimModelSimulationJNI.PrescribedForce_get_forceFunctions__SWIG_0(swigCPtr, this, i), false);
  }

  public FunctionSet upd_forceFunctions(int i) {
    return new FunctionSet(opensimModelSimulationJNI.PrescribedForce_upd_forceFunctions__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_forceFunctions(int i, FunctionSet value) {
    opensimModelSimulationJNI.PrescribedForce_set_forceFunctions__SWIG_0(swigCPtr, this, i, FunctionSet.getCPtr(value), value);
  }

  public int append_forceFunctions(FunctionSet value) {
    return opensimModelSimulationJNI.PrescribedForce_append_forceFunctions(swigCPtr, this, FunctionSet.getCPtr(value), value);
  }

  public void constructProperty_forceFunctions(FunctionSet initValue) {
    opensimModelSimulationJNI.PrescribedForce_constructProperty_forceFunctions(swigCPtr, this, FunctionSet.getCPtr(initValue), initValue);
  }

  public FunctionSet get_forceFunctions() {
    return new FunctionSet(opensimModelSimulationJNI.PrescribedForce_get_forceFunctions__SWIG_1(swigCPtr, this), false);
  }

  public FunctionSet upd_forceFunctions() {
    return new FunctionSet(opensimModelSimulationJNI.PrescribedForce_upd_forceFunctions__SWIG_1(swigCPtr, this), false);
  }

  public void set_forceFunctions(FunctionSet value) {
    opensimModelSimulationJNI.PrescribedForce_set_forceFunctions__SWIG_1(swigCPtr, this, FunctionSet.getCPtr(value), value);
  }

  public void copyProperty_pointFunctions(PrescribedForce source) {
    opensimModelSimulationJNI.PrescribedForce_copyProperty_pointFunctions(swigCPtr, this, PrescribedForce.getCPtr(source), source);
  }

  public FunctionSet get_pointFunctions(int i) {
    return new FunctionSet(opensimModelSimulationJNI.PrescribedForce_get_pointFunctions__SWIG_0(swigCPtr, this, i), false);
  }

  public FunctionSet upd_pointFunctions(int i) {
    return new FunctionSet(opensimModelSimulationJNI.PrescribedForce_upd_pointFunctions__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_pointFunctions(int i, FunctionSet value) {
    opensimModelSimulationJNI.PrescribedForce_set_pointFunctions__SWIG_0(swigCPtr, this, i, FunctionSet.getCPtr(value), value);
  }

  public int append_pointFunctions(FunctionSet value) {
    return opensimModelSimulationJNI.PrescribedForce_append_pointFunctions(swigCPtr, this, FunctionSet.getCPtr(value), value);
  }

  public void constructProperty_pointFunctions(FunctionSet initValue) {
    opensimModelSimulationJNI.PrescribedForce_constructProperty_pointFunctions(swigCPtr, this, FunctionSet.getCPtr(initValue), initValue);
  }

  public FunctionSet get_pointFunctions() {
    return new FunctionSet(opensimModelSimulationJNI.PrescribedForce_get_pointFunctions__SWIG_1(swigCPtr, this), false);
  }

  public FunctionSet upd_pointFunctions() {
    return new FunctionSet(opensimModelSimulationJNI.PrescribedForce_upd_pointFunctions__SWIG_1(swigCPtr, this), false);
  }

  public void set_pointFunctions(FunctionSet value) {
    opensimModelSimulationJNI.PrescribedForce_set_pointFunctions__SWIG_1(swigCPtr, this, FunctionSet.getCPtr(value), value);
  }

  public void copyProperty_torqueFunctions(PrescribedForce source) {
    opensimModelSimulationJNI.PrescribedForce_copyProperty_torqueFunctions(swigCPtr, this, PrescribedForce.getCPtr(source), source);
  }

  public FunctionSet get_torqueFunctions(int i) {
    return new FunctionSet(opensimModelSimulationJNI.PrescribedForce_get_torqueFunctions__SWIG_0(swigCPtr, this, i), false);
  }

  public FunctionSet upd_torqueFunctions(int i) {
    return new FunctionSet(opensimModelSimulationJNI.PrescribedForce_upd_torqueFunctions__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_torqueFunctions(int i, FunctionSet value) {
    opensimModelSimulationJNI.PrescribedForce_set_torqueFunctions__SWIG_0(swigCPtr, this, i, FunctionSet.getCPtr(value), value);
  }

  public int append_torqueFunctions(FunctionSet value) {
    return opensimModelSimulationJNI.PrescribedForce_append_torqueFunctions(swigCPtr, this, FunctionSet.getCPtr(value), value);
  }

  public void constructProperty_torqueFunctions(FunctionSet initValue) {
    opensimModelSimulationJNI.PrescribedForce_constructProperty_torqueFunctions(swigCPtr, this, FunctionSet.getCPtr(initValue), initValue);
  }

  public FunctionSet get_torqueFunctions() {
    return new FunctionSet(opensimModelSimulationJNI.PrescribedForce_get_torqueFunctions__SWIG_1(swigCPtr, this), false);
  }

  public FunctionSet upd_torqueFunctions() {
    return new FunctionSet(opensimModelSimulationJNI.PrescribedForce_upd_torqueFunctions__SWIG_1(swigCPtr, this), false);
  }

  public void set_torqueFunctions(FunctionSet value) {
    opensimModelSimulationJNI.PrescribedForce_set_torqueFunctions__SWIG_1(swigCPtr, this, FunctionSet.getCPtr(value), value);
  }

  public void set_has_output_force_applied(boolean value) {
    opensimModelSimulationJNI.PrescribedForce__has_output_force_applied_set(swigCPtr, this, value);
  }

  public boolean get_has_output_force_applied() {
    return opensimModelSimulationJNI.PrescribedForce__has_output_force_applied_get(swigCPtr, this);
  }

  public void set_has_output_torque_applied(boolean value) {
    opensimModelSimulationJNI.PrescribedForce__has_output_torque_applied_set(swigCPtr, this, value);
  }

  public boolean get_has_output_torque_applied() {
    return opensimModelSimulationJNI.PrescribedForce__has_output_torque_applied_get(swigCPtr, this);
  }

  public void set_has_output_point_of_application(boolean value) {
    opensimModelSimulationJNI.PrescribedForce__has_output_point_of_application_set(swigCPtr, this, value);
  }

  public boolean get_has_output_point_of_application() {
    return opensimModelSimulationJNI.PrescribedForce__has_output_point_of_application_get(swigCPtr, this);
  }

  public PrescribedForce() {
    this(opensimModelSimulationJNI.new_PrescribedForce__SWIG_0(), true);
  }

  public PrescribedForce(String name, PhysicalFrame frame) {
    this(opensimModelSimulationJNI.new_PrescribedForce__SWIG_1(name, PhysicalFrame.getCPtr(frame), frame), true);
  }

  public PrescribedForce(SWIGTYPE_p_SimTK__Xml__Element aNode) {
    this(opensimModelSimulationJNI.new_PrescribedForce__SWIG_2(SWIGTYPE_p_SimTK__Xml__Element.getCPtr(aNode)), true);
  }

  public void updateFromXMLNode(SWIGTYPE_p_SimTK__Xml__Element aNode, int versionNumber) {
    opensimModelSimulationJNI.PrescribedForce_updateFromXMLNode__SWIG_0(swigCPtr, this, SWIGTYPE_p_SimTK__Xml__Element.getCPtr(aNode), versionNumber);
  }

  public void updateFromXMLNode(SWIGTYPE_p_SimTK__Xml__Element aNode) {
    opensimModelSimulationJNI.PrescribedForce_updateFromXMLNode__SWIG_1(swigCPtr, this, SWIGTYPE_p_SimTK__Xml__Element.getCPtr(aNode));
  }

  public void setFrameName(String aBodyName) {
    opensimModelSimulationJNI.PrescribedForce_setFrameName(swigCPtr, this, aBodyName);
  }

  public String getFrameName() {
    return opensimModelSimulationJNI.PrescribedForce_getFrameName(swigCPtr, this);
  }

  public void setBodyName(String aBodyName) {
    opensimModelSimulationJNI.PrescribedForce_setBodyName(swigCPtr, this, aBodyName);
  }

  public String getBodyName() {
    return opensimModelSimulationJNI.PrescribedForce_getBodyName(swigCPtr, this);
  }

  public void setForceFunctions(Function forceX, Function forceY, Function forceZ) {
    opensimModelSimulationJNI.PrescribedForce_setForceFunctions(swigCPtr, this, Function.getCPtr(forceX), forceX, Function.getCPtr(forceY), forceY, Function.getCPtr(forceZ), forceZ);
  }

  public FunctionSet getForceFunctions() {
    return new FunctionSet(opensimModelSimulationJNI.PrescribedForce_getForceFunctions(swigCPtr, this), false);
  }

  public FunctionSet updForceFunctions() {
    return new FunctionSet(opensimModelSimulationJNI.PrescribedForce_updForceFunctions(swigCPtr, this), false);
  }

  public void getForceFunctionNames(ArrayStr aFunctionNames) {
    opensimModelSimulationJNI.PrescribedForce_getForceFunctionNames(swigCPtr, this, ArrayStr.getCPtr(aFunctionNames), aFunctionNames);
  }

  public void setForceFunctionNames(ArrayStr aFunctionNames, Storage kineticsStore) {
    opensimModelSimulationJNI.PrescribedForce_setForceFunctionNames(swigCPtr, this, ArrayStr.getCPtr(aFunctionNames), aFunctionNames, Storage.getCPtr(kineticsStore), kineticsStore);
  }

  public void clearForceFunctions() {
    opensimModelSimulationJNI.PrescribedForce_clearForceFunctions(swigCPtr, this);
  }

  public void setPointFunctions(Function pointX, Function pointY, Function pointZ) {
    opensimModelSimulationJNI.PrescribedForce_setPointFunctions(swigCPtr, this, Function.getCPtr(pointX), pointX, Function.getCPtr(pointY), pointY, Function.getCPtr(pointZ), pointZ);
  }

  public FunctionSet getPointFunctions() {
    return new FunctionSet(opensimModelSimulationJNI.PrescribedForce_getPointFunctions(swigCPtr, this), false);
  }

  public FunctionSet updPointFunctions() {
    return new FunctionSet(opensimModelSimulationJNI.PrescribedForce_updPointFunctions(swigCPtr, this), false);
  }

  public void getPointFunctionNames(ArrayStr aFunctionNames) {
    opensimModelSimulationJNI.PrescribedForce_getPointFunctionNames(swigCPtr, this, ArrayStr.getCPtr(aFunctionNames), aFunctionNames);
  }

  public void setPointFunctionNames(ArrayStr aFunctionNames, Storage kineticsStore) {
    opensimModelSimulationJNI.PrescribedForce_setPointFunctionNames(swigCPtr, this, ArrayStr.getCPtr(aFunctionNames), aFunctionNames, Storage.getCPtr(kineticsStore), kineticsStore);
  }

  public void clearPointFunctions() {
    opensimModelSimulationJNI.PrescribedForce_clearPointFunctions(swigCPtr, this);
  }

  public void setTorqueFunctions(Function torqueX, Function torqueY, Function torqueZ) {
    opensimModelSimulationJNI.PrescribedForce_setTorqueFunctions(swigCPtr, this, Function.getCPtr(torqueX), torqueX, Function.getCPtr(torqueY), torqueY, Function.getCPtr(torqueZ), torqueZ);
  }

  public FunctionSet getTorqueFunctions() {
    return new FunctionSet(opensimModelSimulationJNI.PrescribedForce_getTorqueFunctions(swigCPtr, this), false);
  }

  public FunctionSet updTorqueFunctions() {
    return new FunctionSet(opensimModelSimulationJNI.PrescribedForce_updTorqueFunctions(swigCPtr, this), false);
  }

  public void getTorqueFunctionNames(ArrayStr aFunctionNames) {
    opensimModelSimulationJNI.PrescribedForce_getTorqueFunctionNames(swigCPtr, this, ArrayStr.getCPtr(aFunctionNames), aFunctionNames);
  }

  public void setTorqueFunctionNames(ArrayStr aFunctionNames, Storage kineticsStore) {
    opensimModelSimulationJNI.PrescribedForce_setTorqueFunctionNames(swigCPtr, this, ArrayStr.getCPtr(aFunctionNames), aFunctionNames, Storage.getCPtr(kineticsStore), kineticsStore);
  }

  public void clearTorqueFunctions() {
    opensimModelSimulationJNI.PrescribedForce_clearTorqueFunctions(swigCPtr, this);
  }

  public boolean getForceIsInGlobalFrame() {
    return opensimModelSimulationJNI.PrescribedForce_getForceIsInGlobalFrame(swigCPtr, this);
  }

  public void setForceIsInGlobalFrame(boolean isGlobal) {
    opensimModelSimulationJNI.PrescribedForce_setForceIsInGlobalFrame(swigCPtr, this, isGlobal);
  }

  public boolean getPointIsInGlobalFrame() {
    return opensimModelSimulationJNI.PrescribedForce_getPointIsInGlobalFrame(swigCPtr, this);
  }

  public void setPointIsInGlobalFrame(boolean isGlobal) {
    opensimModelSimulationJNI.PrescribedForce_setPointIsInGlobalFrame(swigCPtr, this, isGlobal);
  }

  public PhysicalFrame getFrame() {
    return new PhysicalFrame(opensimModelSimulationJNI.PrescribedForce_getFrame(swigCPtr, this), false);
  }

  public Vec3 getForceAtTime(double aTime) {
    return new Vec3(opensimModelSimulationJNI.PrescribedForce_getForceAtTime(swigCPtr, this, aTime), true);
  }

  public Vec3 getPointAtTime(double aTime) {
    return new Vec3(opensimModelSimulationJNI.PrescribedForce_getPointAtTime(swigCPtr, this, aTime), true);
  }

  public Vec3 getTorqueAtTime(double aTime) {
    return new Vec3(opensimModelSimulationJNI.PrescribedForce_getTorqueAtTime(swigCPtr, this, aTime), true);
  }

  public ArrayStr getRecordLabels() {
    return new ArrayStr(opensimModelSimulationJNI.PrescribedForce_getRecordLabels(swigCPtr, this), true);
  }

  public ArrayDouble getRecordValues(State state) {
    return new ArrayDouble(opensimModelSimulationJNI.PrescribedForce_getRecordValues(swigCPtr, this, State.getCPtr(state), state), true);
  }

  public Vec3 getForceApplied(State state) {
    return new Vec3(opensimModelSimulationJNI.PrescribedForce_getForceApplied(swigCPtr, this, State.getCPtr(state), state), true);
  }

  public Vec3 getTorqueApplied(State state) {
    return new Vec3(opensimModelSimulationJNI.PrescribedForce_getTorqueApplied(swigCPtr, this, State.getCPtr(state), state), true);
  }

  public Vec3 getApplicationPoint(State state) {
    return new Vec3(opensimModelSimulationJNI.PrescribedForce_getApplicationPoint(swigCPtr, this, State.getCPtr(state), state), true);
  }

}
