/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class AnalysisSet extends SetAnalysis {
  private transient long swigCPtr;

  public AnalysisSet(long cPtr, boolean cMemoryOwn) {
    super(opensimModelSimulationJNI.AnalysisSet_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(AnalysisSet obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimModelSimulationJNI.delete_AnalysisSet(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static AnalysisSet safeDownCast(OpenSimObject obj) {
    long cPtr = opensimModelSimulationJNI.AnalysisSet_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new AnalysisSet(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimModelSimulationJNI.AnalysisSet_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimModelSimulationJNI.AnalysisSet_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimModelSimulationJNI.AnalysisSet_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new AnalysisSet(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimModelSimulationJNI.AnalysisSet_getConcreteClassName(swigCPtr, this);
  }

  public AnalysisSet() {
    this(opensimModelSimulationJNI.new_AnalysisSet__SWIG_0(), true);
  }

  public AnalysisSet(Model aModel) {
    this(opensimModelSimulationJNI.new_AnalysisSet__SWIG_1(Model.getCPtr(aModel), aModel), true);
  }

  public AnalysisSet(String aFileName) {
    this(opensimModelSimulationJNI.new_AnalysisSet__SWIG_2(aFileName), true);
  }

  public AnalysisSet(AnalysisSet aSet) {
    this(opensimModelSimulationJNI.new_AnalysisSet__SWIG_3(AnalysisSet.getCPtr(aSet), aSet), true);
  }

  public void setModel(Model aModel) {
    opensimModelSimulationJNI.AnalysisSet_setModel(swigCPtr, this, Model.getCPtr(aModel), aModel);
  }

  public Model getModel() {
    return new Model(opensimModelSimulationJNI.AnalysisSet_getModel(swigCPtr, this), false);
  }

  public void setOn(boolean aTrueFalse) {
    opensimModelSimulationJNI.AnalysisSet_setOn__SWIG_0(swigCPtr, this, aTrueFalse);
  }

  public void setOn(ArrayBool aOn) {
    opensimModelSimulationJNI.AnalysisSet_setOn__SWIG_1(swigCPtr, this, ArrayBool.getCPtr(aOn), aOn);
  }

  public ArrayBool getOn() {
    return new ArrayBool(opensimModelSimulationJNI.AnalysisSet_getOn(swigCPtr, this), true);
  }

  public void begin(State s) {
    opensimModelSimulationJNI.AnalysisSet_begin(swigCPtr, this, State.getCPtr(s), s);
  }

  public void step(State s, int stepNumber) {
    opensimModelSimulationJNI.AnalysisSet_step(swigCPtr, this, State.getCPtr(s), s, stepNumber);
  }

  public void end(State s) {
    opensimModelSimulationJNI.AnalysisSet_end(swigCPtr, this, State.getCPtr(s), s);
  }

  public void printResults(String aBaseName, String aPath, double aDT, String aExtension) {
    opensimModelSimulationJNI.AnalysisSet_printResults__SWIG_0(swigCPtr, this, aBaseName, aPath, aDT, aExtension);
  }

  public void printResults(String aBaseName, String aPath, double aDT) {
    opensimModelSimulationJNI.AnalysisSet_printResults__SWIG_1(swigCPtr, this, aBaseName, aPath, aDT);
  }

  public void printResults(String aBaseName, String aPath) {
    opensimModelSimulationJNI.AnalysisSet_printResults__SWIG_2(swigCPtr, this, aBaseName, aPath);
  }

  public void printResults(String aBaseName) {
    opensimModelSimulationJNI.AnalysisSet_printResults__SWIG_3(swigCPtr, this, aBaseName);
  }

  public static void getAvailableAnalyses(AnalysisSet analysisset) {
    opensimModelSimulationJNI.AnalysisSet_getAvailableAnalyses(AnalysisSet.getCPtr(analysisset), analysisset);
  }

}
