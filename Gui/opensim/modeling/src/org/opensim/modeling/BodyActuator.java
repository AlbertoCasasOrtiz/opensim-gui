/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class BodyActuator extends Actuator {
  private transient long swigCPtr;

  public BodyActuator(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.BodyActuator_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(BodyActuator obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimModelJNI.delete_BodyActuator(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static BodyActuator safeDownCast(OpenSimObject obj) {
    long cPtr = opensimModelJNI.BodyActuator_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new BodyActuator(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimModelJNI.BodyActuator_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimModelJNI.BodyActuator_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimModelJNI.BodyActuator_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new BodyActuator(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimModelJNI.BodyActuator_getConcreteClassName(swigCPtr, this);
  }

  public void copyProperty_point(BodyActuator source) {
    opensimModelJNI.BodyActuator_copyProperty_point(swigCPtr, this, BodyActuator.getCPtr(source), source);
  }

  public Vec3 get_point(int i) {
    return new Vec3(opensimModelJNI.BodyActuator_get_point__SWIG_0(swigCPtr, this, i), false);
  }

  public Vec3 upd_point(int i) {
    return new Vec3(opensimModelJNI.BodyActuator_upd_point__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_point(int i, Vec3 value) {
    opensimModelJNI.BodyActuator_set_point__SWIG_0(swigCPtr, this, i, Vec3.getCPtr(value), value);
  }

  public int append_point(Vec3 value) {
    return opensimModelJNI.BodyActuator_append_point(swigCPtr, this, Vec3.getCPtr(value), value);
  }

  public void constructProperty_point(Vec3 initValue) {
    opensimModelJNI.BodyActuator_constructProperty_point(swigCPtr, this, Vec3.getCPtr(initValue), initValue);
  }

  public Vec3 get_point() {
    return new Vec3(opensimModelJNI.BodyActuator_get_point__SWIG_1(swigCPtr, this), false);
  }

  public Vec3 upd_point() {
    return new Vec3(opensimModelJNI.BodyActuator_upd_point__SWIG_1(swigCPtr, this), false);
  }

  public void set_point(Vec3 value) {
    opensimModelJNI.BodyActuator_set_point__SWIG_1(swigCPtr, this, Vec3.getCPtr(value), value);
  }

  public void copyProperty_point_is_global(BodyActuator source) {
    opensimModelJNI.BodyActuator_copyProperty_point_is_global(swigCPtr, this, BodyActuator.getCPtr(source), source);
  }

  public boolean get_point_is_global(int i) {
    return opensimModelJNI.BodyActuator_get_point_is_global__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_bool upd_point_is_global(int i) {
    return new SWIGTYPE_p_bool(opensimModelJNI.BodyActuator_upd_point_is_global__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_point_is_global(int i, boolean value) {
    opensimModelJNI.BodyActuator_set_point_is_global__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_point_is_global(boolean value) {
    return opensimModelJNI.BodyActuator_append_point_is_global(swigCPtr, this, value);
  }

  public void constructProperty_point_is_global(boolean initValue) {
    opensimModelJNI.BodyActuator_constructProperty_point_is_global(swigCPtr, this, initValue);
  }

  public boolean get_point_is_global() {
    return opensimModelJNI.BodyActuator_get_point_is_global__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_bool upd_point_is_global() {
    return new SWIGTYPE_p_bool(opensimModelJNI.BodyActuator_upd_point_is_global__SWIG_1(swigCPtr, this), false);
  }

  public void set_point_is_global(boolean value) {
    opensimModelJNI.BodyActuator_set_point_is_global__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_spatial_force_is_global(BodyActuator source) {
    opensimModelJNI.BodyActuator_copyProperty_spatial_force_is_global(swigCPtr, this, BodyActuator.getCPtr(source), source);
  }

  public boolean get_spatial_force_is_global(int i) {
    return opensimModelJNI.BodyActuator_get_spatial_force_is_global__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_bool upd_spatial_force_is_global(int i) {
    return new SWIGTYPE_p_bool(opensimModelJNI.BodyActuator_upd_spatial_force_is_global__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_spatial_force_is_global(int i, boolean value) {
    opensimModelJNI.BodyActuator_set_spatial_force_is_global__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_spatial_force_is_global(boolean value) {
    return opensimModelJNI.BodyActuator_append_spatial_force_is_global(swigCPtr, this, value);
  }

  public void constructProperty_spatial_force_is_global(boolean initValue) {
    opensimModelJNI.BodyActuator_constructProperty_spatial_force_is_global(swigCPtr, this, initValue);
  }

  public boolean get_spatial_force_is_global() {
    return opensimModelJNI.BodyActuator_get_spatial_force_is_global__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_bool upd_spatial_force_is_global() {
    return new SWIGTYPE_p_bool(opensimModelJNI.BodyActuator_upd_spatial_force_is_global__SWIG_1(swigCPtr, this), false);
  }

  public void set_spatial_force_is_global(boolean value) {
    opensimModelJNI.BodyActuator_set_spatial_force_is_global__SWIG_1(swigCPtr, this, value);
  }

  public BodyActuator() {
    this(opensimModelJNI.new_BodyActuator__SWIG_0(), true);
  }

  public BodyActuator(Body body, Vec3 point, boolean pointIsGlobal, boolean spatialForceIsGlobal) {
    this(opensimModelJNI.new_BodyActuator__SWIG_1(Body.getCPtr(body), body, Vec3.getCPtr(point), point, pointIsGlobal, spatialForceIsGlobal), true);
  }

  public BodyActuator(Body body, Vec3 point, boolean pointIsGlobal) {
    this(opensimModelJNI.new_BodyActuator__SWIG_2(Body.getCPtr(body), body, Vec3.getCPtr(point), point, pointIsGlobal), true);
  }

  public BodyActuator(Body body, Vec3 point) {
    this(opensimModelJNI.new_BodyActuator__SWIG_3(Body.getCPtr(body), body, Vec3.getCPtr(point), point), true);
  }

  public BodyActuator(Body body) {
    this(opensimModelJNI.new_BodyActuator__SWIG_4(Body.getCPtr(body), body), true);
  }

  public void setPoint(Vec3 point) {
    opensimModelJNI.BodyActuator_setPoint(swigCPtr, this, Vec3.getCPtr(point), point);
  }

  public Vec3 getPoint() {
    return new Vec3(opensimModelJNI.BodyActuator_getPoint(swigCPtr, this), false);
  }

  public void setPointForceIsGlobal(boolean isGlobal) {
    opensimModelJNI.BodyActuator_setPointForceIsGlobal(swigCPtr, this, isGlobal);
  }

  public boolean getPointIsGlobal() {
    return opensimModelJNI.BodyActuator_getPointIsGlobal(swigCPtr, this);
  }

  public void setSpatialForceIsGlobal(boolean isGlobal) {
    opensimModelJNI.BodyActuator_setSpatialForceIsGlobal(swigCPtr, this, isGlobal);
  }

  public boolean getSpatialForceIsGlobal() {
    return opensimModelJNI.BodyActuator_getSpatialForceIsGlobal(swigCPtr, this);
  }

  public void setBody(Body body) {
    opensimModelJNI.BodyActuator_setBody(swigCPtr, this, Body.getCPtr(body), body);
  }

  public Body getBody() {
    return new Body(opensimModelJNI.BodyActuator_getBody(swigCPtr, this), false);
  }

  public void setBodyName(String name) {
    opensimModelJNI.BodyActuator_setBodyName(swigCPtr, this, name);
  }

  public String getBodyName() {
    return opensimModelJNI.BodyActuator_getBodyName(swigCPtr, this);
  }

}
