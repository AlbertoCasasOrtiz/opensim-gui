/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class ConditionalPathPoint extends PathPoint {
  private transient long swigCPtr;

  public ConditionalPathPoint(long cPtr, boolean cMemoryOwn) {
    super(opensimModelSimulationJNI.ConditionalPathPoint_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(ConditionalPathPoint obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimModelSimulationJNI.delete_ConditionalPathPoint(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static ConditionalPathPoint safeDownCast(OpenSimObject obj) {
    long cPtr = opensimModelSimulationJNI.ConditionalPathPoint_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new ConditionalPathPoint(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimModelSimulationJNI.ConditionalPathPoint_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimModelSimulationJNI.ConditionalPathPoint_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimModelSimulationJNI.ConditionalPathPoint_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new ConditionalPathPoint(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimModelSimulationJNI.ConditionalPathPoint_getConcreteClassName(swigCPtr, this);
  }

  public ConditionalPathPoint() {
    this(opensimModelSimulationJNI.new_ConditionalPathPoint__SWIG_0(), true);
  }

  public ConditionalPathPoint(ConditionalPathPoint aPoint) {
    this(opensimModelSimulationJNI.new_ConditionalPathPoint__SWIG_1(ConditionalPathPoint.getCPtr(aPoint), aPoint), true);
  }

  public void copyData(ConditionalPathPoint aPoint) {
    opensimModelSimulationJNI.ConditionalPathPoint_copyData(swigCPtr, this, ConditionalPathPoint.getCPtr(aPoint), aPoint);
  }

  public void init(PathPoint aPoint) {
    opensimModelSimulationJNI.ConditionalPathPoint_init(swigCPtr, this, PathPoint.getCPtr(aPoint), aPoint);
  }

  public void updateFromXMLNode(SWIGTYPE_p_SimTK__Xml__Element aNode, int versionNumber) {
    opensimModelSimulationJNI.ConditionalPathPoint_updateFromXMLNode__SWIG_0(swigCPtr, this, SWIGTYPE_p_SimTK__Xml__Element.getCPtr(aNode), versionNumber);
  }

  public void updateFromXMLNode(SWIGTYPE_p_SimTK__Xml__Element aNode) {
    opensimModelSimulationJNI.ConditionalPathPoint_updateFromXMLNode__SWIG_1(swigCPtr, this, SWIGTYPE_p_SimTK__Xml__Element.getCPtr(aNode));
  }

  public ArrayDouble getRange() {
    return new ArrayDouble(opensimModelSimulationJNI.ConditionalPathPoint_getRange(swigCPtr, this), false);
  }

  public Coordinate getCoordinate() {
    long cPtr = opensimModelSimulationJNI.ConditionalPathPoint_getCoordinate(swigCPtr, this);
    return (cPtr == 0) ? null : new Coordinate(cPtr, false);
  }

  public String getCoordinateName() {
    return opensimModelSimulationJNI.ConditionalPathPoint_getCoordinateName(swigCPtr, this);
  }

}
