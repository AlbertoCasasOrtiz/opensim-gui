/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.7
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.opensim.modeling;

public class Thelen2003Muscle extends ActivationFiberLengthMuscle {
  private transient long swigCPtr;

  public Thelen2003Muscle(long cPtr, boolean cMemoryOwn) {
    super(opensimModelJNI.Thelen2003Muscle_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(Thelen2003Muscle obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        opensimModelJNI.delete_Thelen2003Muscle(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public static Thelen2003Muscle safeDownCast(OpenSimObject obj) {
    long cPtr = opensimModelJNI.Thelen2003Muscle_safeDownCast(OpenSimObject.getCPtr(obj), obj);
    return (cPtr == 0) ? null : new Thelen2003Muscle(cPtr, false);
  }

  public void assign(OpenSimObject aObject) {
    opensimModelJNI.Thelen2003Muscle_assign(swigCPtr, this, OpenSimObject.getCPtr(aObject), aObject);
  }

  public static String getClassName() {
    return opensimModelJNI.Thelen2003Muscle_getClassName();
  }

  public OpenSimObject clone() {
    long cPtr = opensimModelJNI.Thelen2003Muscle_clone(swigCPtr, this);
    return (cPtr == 0) ? null : new Thelen2003Muscle(cPtr, true);
  }

  public String getConcreteClassName() {
    return opensimModelJNI.Thelen2003Muscle_getConcreteClassName(swigCPtr, this);
  }

  public void copyProperty_FmaxTendonStrain(Thelen2003Muscle source) {
    opensimModelJNI.Thelen2003Muscle_copyProperty_FmaxTendonStrain(swigCPtr, this, Thelen2003Muscle.getCPtr(source), source);
  }

  public double get_FmaxTendonStrain(int i) {
    return opensimModelJNI.Thelen2003Muscle_get_FmaxTendonStrain__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_FmaxTendonStrain(int i) {
    return new SWIGTYPE_p_double(opensimModelJNI.Thelen2003Muscle_upd_FmaxTendonStrain__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_FmaxTendonStrain(int i, double value) {
    opensimModelJNI.Thelen2003Muscle_set_FmaxTendonStrain__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_FmaxTendonStrain(double value) {
    return opensimModelJNI.Thelen2003Muscle_append_FmaxTendonStrain(swigCPtr, this, value);
  }

  public void constructProperty_FmaxTendonStrain(double initValue) {
    opensimModelJNI.Thelen2003Muscle_constructProperty_FmaxTendonStrain(swigCPtr, this, initValue);
  }

  public double get_FmaxTendonStrain() {
    return opensimModelJNI.Thelen2003Muscle_get_FmaxTendonStrain__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_FmaxTendonStrain() {
    return new SWIGTYPE_p_double(opensimModelJNI.Thelen2003Muscle_upd_FmaxTendonStrain__SWIG_1(swigCPtr, this), false);
  }

  public void set_FmaxTendonStrain(double value) {
    opensimModelJNI.Thelen2003Muscle_set_FmaxTendonStrain__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_FmaxMuscleStrain(Thelen2003Muscle source) {
    opensimModelJNI.Thelen2003Muscle_copyProperty_FmaxMuscleStrain(swigCPtr, this, Thelen2003Muscle.getCPtr(source), source);
  }

  public double get_FmaxMuscleStrain(int i) {
    return opensimModelJNI.Thelen2003Muscle_get_FmaxMuscleStrain__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_FmaxMuscleStrain(int i) {
    return new SWIGTYPE_p_double(opensimModelJNI.Thelen2003Muscle_upd_FmaxMuscleStrain__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_FmaxMuscleStrain(int i, double value) {
    opensimModelJNI.Thelen2003Muscle_set_FmaxMuscleStrain__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_FmaxMuscleStrain(double value) {
    return opensimModelJNI.Thelen2003Muscle_append_FmaxMuscleStrain(swigCPtr, this, value);
  }

  public void constructProperty_FmaxMuscleStrain(double initValue) {
    opensimModelJNI.Thelen2003Muscle_constructProperty_FmaxMuscleStrain(swigCPtr, this, initValue);
  }

  public double get_FmaxMuscleStrain() {
    return opensimModelJNI.Thelen2003Muscle_get_FmaxMuscleStrain__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_FmaxMuscleStrain() {
    return new SWIGTYPE_p_double(opensimModelJNI.Thelen2003Muscle_upd_FmaxMuscleStrain__SWIG_1(swigCPtr, this), false);
  }

  public void set_FmaxMuscleStrain(double value) {
    opensimModelJNI.Thelen2003Muscle_set_FmaxMuscleStrain__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_KshapeActive(Thelen2003Muscle source) {
    opensimModelJNI.Thelen2003Muscle_copyProperty_KshapeActive(swigCPtr, this, Thelen2003Muscle.getCPtr(source), source);
  }

  public double get_KshapeActive(int i) {
    return opensimModelJNI.Thelen2003Muscle_get_KshapeActive__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_KshapeActive(int i) {
    return new SWIGTYPE_p_double(opensimModelJNI.Thelen2003Muscle_upd_KshapeActive__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_KshapeActive(int i, double value) {
    opensimModelJNI.Thelen2003Muscle_set_KshapeActive__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_KshapeActive(double value) {
    return opensimModelJNI.Thelen2003Muscle_append_KshapeActive(swigCPtr, this, value);
  }

  public void constructProperty_KshapeActive(double initValue) {
    opensimModelJNI.Thelen2003Muscle_constructProperty_KshapeActive(swigCPtr, this, initValue);
  }

  public double get_KshapeActive() {
    return opensimModelJNI.Thelen2003Muscle_get_KshapeActive__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_KshapeActive() {
    return new SWIGTYPE_p_double(opensimModelJNI.Thelen2003Muscle_upd_KshapeActive__SWIG_1(swigCPtr, this), false);
  }

  public void set_KshapeActive(double value) {
    opensimModelJNI.Thelen2003Muscle_set_KshapeActive__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_KshapePassive(Thelen2003Muscle source) {
    opensimModelJNI.Thelen2003Muscle_copyProperty_KshapePassive(swigCPtr, this, Thelen2003Muscle.getCPtr(source), source);
  }

  public double get_KshapePassive(int i) {
    return opensimModelJNI.Thelen2003Muscle_get_KshapePassive__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_KshapePassive(int i) {
    return new SWIGTYPE_p_double(opensimModelJNI.Thelen2003Muscle_upd_KshapePassive__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_KshapePassive(int i, double value) {
    opensimModelJNI.Thelen2003Muscle_set_KshapePassive__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_KshapePassive(double value) {
    return opensimModelJNI.Thelen2003Muscle_append_KshapePassive(swigCPtr, this, value);
  }

  public void constructProperty_KshapePassive(double initValue) {
    opensimModelJNI.Thelen2003Muscle_constructProperty_KshapePassive(swigCPtr, this, initValue);
  }

  public double get_KshapePassive() {
    return opensimModelJNI.Thelen2003Muscle_get_KshapePassive__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_KshapePassive() {
    return new SWIGTYPE_p_double(opensimModelJNI.Thelen2003Muscle_upd_KshapePassive__SWIG_1(swigCPtr, this), false);
  }

  public void set_KshapePassive(double value) {
    opensimModelJNI.Thelen2003Muscle_set_KshapePassive__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_Af(Thelen2003Muscle source) {
    opensimModelJNI.Thelen2003Muscle_copyProperty_Af(swigCPtr, this, Thelen2003Muscle.getCPtr(source), source);
  }

  public double get_Af(int i) {
    return opensimModelJNI.Thelen2003Muscle_get_Af__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_Af(int i) {
    return new SWIGTYPE_p_double(opensimModelJNI.Thelen2003Muscle_upd_Af__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_Af(int i, double value) {
    opensimModelJNI.Thelen2003Muscle_set_Af__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_Af(double value) {
    return opensimModelJNI.Thelen2003Muscle_append_Af(swigCPtr, this, value);
  }

  public void constructProperty_Af(double initValue) {
    opensimModelJNI.Thelen2003Muscle_constructProperty_Af(swigCPtr, this, initValue);
  }

  public double get_Af() {
    return opensimModelJNI.Thelen2003Muscle_get_Af__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_Af() {
    return new SWIGTYPE_p_double(opensimModelJNI.Thelen2003Muscle_upd_Af__SWIG_1(swigCPtr, this), false);
  }

  public void set_Af(double value) {
    opensimModelJNI.Thelen2003Muscle_set_Af__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_Flen(Thelen2003Muscle source) {
    opensimModelJNI.Thelen2003Muscle_copyProperty_Flen(swigCPtr, this, Thelen2003Muscle.getCPtr(source), source);
  }

  public double get_Flen(int i) {
    return opensimModelJNI.Thelen2003Muscle_get_Flen__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_Flen(int i) {
    return new SWIGTYPE_p_double(opensimModelJNI.Thelen2003Muscle_upd_Flen__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_Flen(int i, double value) {
    opensimModelJNI.Thelen2003Muscle_set_Flen__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_Flen(double value) {
    return opensimModelJNI.Thelen2003Muscle_append_Flen(swigCPtr, this, value);
  }

  public void constructProperty_Flen(double initValue) {
    opensimModelJNI.Thelen2003Muscle_constructProperty_Flen(swigCPtr, this, initValue);
  }

  public double get_Flen() {
    return opensimModelJNI.Thelen2003Muscle_get_Flen__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_Flen() {
    return new SWIGTYPE_p_double(opensimModelJNI.Thelen2003Muscle_upd_Flen__SWIG_1(swigCPtr, this), false);
  }

  public void set_Flen(double value) {
    opensimModelJNI.Thelen2003Muscle_set_Flen__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_fv_linear_extrap_threshold(Thelen2003Muscle source) {
    opensimModelJNI.Thelen2003Muscle_copyProperty_fv_linear_extrap_threshold(swigCPtr, this, Thelen2003Muscle.getCPtr(source), source);
  }

  public double get_fv_linear_extrap_threshold(int i) {
    return opensimModelJNI.Thelen2003Muscle_get_fv_linear_extrap_threshold__SWIG_0(swigCPtr, this, i);
  }

  public SWIGTYPE_p_double upd_fv_linear_extrap_threshold(int i) {
    return new SWIGTYPE_p_double(opensimModelJNI.Thelen2003Muscle_upd_fv_linear_extrap_threshold__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_fv_linear_extrap_threshold(int i, double value) {
    opensimModelJNI.Thelen2003Muscle_set_fv_linear_extrap_threshold__SWIG_0(swigCPtr, this, i, value);
  }

  public int append_fv_linear_extrap_threshold(double value) {
    return opensimModelJNI.Thelen2003Muscle_append_fv_linear_extrap_threshold(swigCPtr, this, value);
  }

  public void constructProperty_fv_linear_extrap_threshold(double initValue) {
    opensimModelJNI.Thelen2003Muscle_constructProperty_fv_linear_extrap_threshold(swigCPtr, this, initValue);
  }

  public double get_fv_linear_extrap_threshold() {
    return opensimModelJNI.Thelen2003Muscle_get_fv_linear_extrap_threshold__SWIG_1(swigCPtr, this);
  }

  public SWIGTYPE_p_double upd_fv_linear_extrap_threshold() {
    return new SWIGTYPE_p_double(opensimModelJNI.Thelen2003Muscle_upd_fv_linear_extrap_threshold__SWIG_1(swigCPtr, this), false);
  }

  public void set_fv_linear_extrap_threshold(double value) {
    opensimModelJNI.Thelen2003Muscle_set_fv_linear_extrap_threshold__SWIG_1(swigCPtr, this, value);
  }

  public void copyProperty_MuscleFirstOrderActivationDynamicModel(Thelen2003Muscle source) {
    opensimModelJNI.Thelen2003Muscle_copyProperty_MuscleFirstOrderActivationDynamicModel(swigCPtr, this, Thelen2003Muscle.getCPtr(source), source);
  }

  public MuscleFirstOrderActivationDynamicModel get_MuscleFirstOrderActivationDynamicModel(int i) {
    return new MuscleFirstOrderActivationDynamicModel(opensimModelJNI.Thelen2003Muscle_get_MuscleFirstOrderActivationDynamicModel__SWIG_0(swigCPtr, this, i), false);
  }

  public MuscleFirstOrderActivationDynamicModel upd_MuscleFirstOrderActivationDynamicModel(int i) {
    return new MuscleFirstOrderActivationDynamicModel(opensimModelJNI.Thelen2003Muscle_upd_MuscleFirstOrderActivationDynamicModel__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_MuscleFirstOrderActivationDynamicModel(int i, MuscleFirstOrderActivationDynamicModel value) {
    opensimModelJNI.Thelen2003Muscle_set_MuscleFirstOrderActivationDynamicModel__SWIG_0(swigCPtr, this, i, MuscleFirstOrderActivationDynamicModel.getCPtr(value), value);
  }

  public int append_MuscleFirstOrderActivationDynamicModel(MuscleFirstOrderActivationDynamicModel value) {
    return opensimModelJNI.Thelen2003Muscle_append_MuscleFirstOrderActivationDynamicModel(swigCPtr, this, MuscleFirstOrderActivationDynamicModel.getCPtr(value), value);
  }

  public void constructProperty_MuscleFirstOrderActivationDynamicModel(MuscleFirstOrderActivationDynamicModel initValue) {
    opensimModelJNI.Thelen2003Muscle_constructProperty_MuscleFirstOrderActivationDynamicModel(swigCPtr, this, MuscleFirstOrderActivationDynamicModel.getCPtr(initValue), initValue);
  }

  public MuscleFirstOrderActivationDynamicModel get_MuscleFirstOrderActivationDynamicModel() {
    return new MuscleFirstOrderActivationDynamicModel(opensimModelJNI.Thelen2003Muscle_get_MuscleFirstOrderActivationDynamicModel__SWIG_1(swigCPtr, this), false);
  }

  public MuscleFirstOrderActivationDynamicModel upd_MuscleFirstOrderActivationDynamicModel() {
    return new MuscleFirstOrderActivationDynamicModel(opensimModelJNI.Thelen2003Muscle_upd_MuscleFirstOrderActivationDynamicModel__SWIG_1(swigCPtr, this), false);
  }

  public void set_MuscleFirstOrderActivationDynamicModel(MuscleFirstOrderActivationDynamicModel value) {
    opensimModelJNI.Thelen2003Muscle_set_MuscleFirstOrderActivationDynamicModel__SWIG_1(swigCPtr, this, MuscleFirstOrderActivationDynamicModel.getCPtr(value), value);
  }

  public void copyProperty_MuscleFixedWidthPennationModel(Thelen2003Muscle source) {
    opensimModelJNI.Thelen2003Muscle_copyProperty_MuscleFixedWidthPennationModel(swigCPtr, this, Thelen2003Muscle.getCPtr(source), source);
  }

  public MuscleFixedWidthPennationModel get_MuscleFixedWidthPennationModel(int i) {
    return new MuscleFixedWidthPennationModel(opensimModelJNI.Thelen2003Muscle_get_MuscleFixedWidthPennationModel__SWIG_0(swigCPtr, this, i), false);
  }

  public MuscleFixedWidthPennationModel upd_MuscleFixedWidthPennationModel(int i) {
    return new MuscleFixedWidthPennationModel(opensimModelJNI.Thelen2003Muscle_upd_MuscleFixedWidthPennationModel__SWIG_0(swigCPtr, this, i), false);
  }

  public void set_MuscleFixedWidthPennationModel(int i, MuscleFixedWidthPennationModel value) {
    opensimModelJNI.Thelen2003Muscle_set_MuscleFixedWidthPennationModel__SWIG_0(swigCPtr, this, i, MuscleFixedWidthPennationModel.getCPtr(value), value);
  }

  public int append_MuscleFixedWidthPennationModel(MuscleFixedWidthPennationModel value) {
    return opensimModelJNI.Thelen2003Muscle_append_MuscleFixedWidthPennationModel(swigCPtr, this, MuscleFixedWidthPennationModel.getCPtr(value), value);
  }

  public void constructProperty_MuscleFixedWidthPennationModel(MuscleFixedWidthPennationModel initValue) {
    opensimModelJNI.Thelen2003Muscle_constructProperty_MuscleFixedWidthPennationModel(swigCPtr, this, MuscleFixedWidthPennationModel.getCPtr(initValue), initValue);
  }

  public MuscleFixedWidthPennationModel get_MuscleFixedWidthPennationModel() {
    return new MuscleFixedWidthPennationModel(opensimModelJNI.Thelen2003Muscle_get_MuscleFixedWidthPennationModel__SWIG_1(swigCPtr, this), false);
  }

  public MuscleFixedWidthPennationModel upd_MuscleFixedWidthPennationModel() {
    return new MuscleFixedWidthPennationModel(opensimModelJNI.Thelen2003Muscle_upd_MuscleFixedWidthPennationModel__SWIG_1(swigCPtr, this), false);
  }

  public void set_MuscleFixedWidthPennationModel(MuscleFixedWidthPennationModel value) {
    opensimModelJNI.Thelen2003Muscle_set_MuscleFixedWidthPennationModel__SWIG_1(swigCPtr, this, MuscleFixedWidthPennationModel.getCPtr(value), value);
  }

  public Thelen2003Muscle() {
    this(opensimModelJNI.new_Thelen2003Muscle__SWIG_0(), true);
  }

  public Thelen2003Muscle(String aName, double aMaxIsometricForce, double aOptimalFiberLength, double aTendonSlackLength, double aPennationAngle) {
    this(opensimModelJNI.new_Thelen2003Muscle__SWIG_1(aName, aMaxIsometricForce, aOptimalFiberLength, aTendonSlackLength, aPennationAngle), true);
  }

  public double getActivationTimeConstant() {
    return opensimModelJNI.Thelen2003Muscle_getActivationTimeConstant(swigCPtr, this);
  }

  public void setActivationTimeConstant(double actTimeConstant) {
    opensimModelJNI.Thelen2003Muscle_setActivationTimeConstant(swigCPtr, this, actTimeConstant);
  }

  public double getDeactivationTimeConstant() {
    return opensimModelJNI.Thelen2003Muscle_getDeactivationTimeConstant(swigCPtr, this);
  }

  public void setDeactivationTimeConstant(double deactTimeConstant) {
    opensimModelJNI.Thelen2003Muscle_setDeactivationTimeConstant(swigCPtr, this, deactTimeConstant);
  }

  public double getMinimumActivation() {
    return opensimModelJNI.Thelen2003Muscle_getMinimumActivation(swigCPtr, this);
  }

  public void setMinimumActivation(double minimumActivation) {
    opensimModelJNI.Thelen2003Muscle_setMinimumActivation(swigCPtr, this, minimumActivation);
  }

  public double getMaximumPennationAngle() {
    return opensimModelJNI.Thelen2003Muscle_getMaximumPennationAngle(swigCPtr, this);
  }

  public void setMaximumPennationAngle(double maximumPennationAngle) {
    opensimModelJNI.Thelen2003Muscle_setMaximumPennationAngle(swigCPtr, this, maximumPennationAngle);
  }

  public double getMinimumFiberLength() {
    return opensimModelJNI.Thelen2003Muscle_getMinimumFiberLength(swigCPtr, this);
  }

  public MuscleFirstOrderActivationDynamicModel getActivationModel() {
    return new MuscleFirstOrderActivationDynamicModel(opensimModelJNI.Thelen2003Muscle_getActivationModel(swigCPtr, this), false);
  }

  public MuscleFixedWidthPennationModel getPennationModel() {
    return new MuscleFixedWidthPennationModel(opensimModelJNI.Thelen2003Muscle_getPennationModel(swigCPtr, this), false);
  }

  public void printCurveToCSVFile(Thelen2003Muscle.CurveType ctype, String path) {
    opensimModelJNI.Thelen2003Muscle_printCurveToCSVFile(swigCPtr, this, ctype.swigValue(), path);
  }

  public double computeActuation(State s) {
    return opensimModelJNI.Thelen2003Muscle_computeActuation(swigCPtr, this, State.getCPtr(s), s);
  }

  public void computeInitialFiberEquilibrium(State s) {
    opensimModelJNI.Thelen2003Muscle_computeInitialFiberEquilibrium(swigCPtr, this, State.getCPtr(s), s);
  }

  public double calcActiveFiberForceAlongTendon(double activation, double fiberLength, double fiberVelocity) {
    return opensimModelJNI.Thelen2003Muscle_calcActiveFiberForceAlongTendon(swigCPtr, this, activation, fiberLength, fiberVelocity);
  }

  public double calcInextensibleTendonActiveFiberForce(State s, double aActivation) {
    return opensimModelJNI.Thelen2003Muscle_calcInextensibleTendonActiveFiberForce(swigCPtr, this, State.getCPtr(s), s, aActivation);
  }

  public final static class CurveType {
    public final static Thelen2003Muscle.CurveType FiberActiveForceLength = new Thelen2003Muscle.CurveType("FiberActiveForceLength");
    public final static Thelen2003Muscle.CurveType FiberPassiveForceLength = new Thelen2003Muscle.CurveType("FiberPassiveForceLength");
    public final static Thelen2003Muscle.CurveType FiberForceVelocity = new Thelen2003Muscle.CurveType("FiberForceVelocity");
    public final static Thelen2003Muscle.CurveType TendonForceLength = new Thelen2003Muscle.CurveType("TendonForceLength");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static CurveType swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + CurveType.class + " with value " + swigValue);
    }

    private CurveType(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private CurveType(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private CurveType(String swigName, CurveType swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static CurveType[] swigValues = { FiberActiveForceLength, FiberPassiveForceLength, FiberForceVelocity, TendonForceLength };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
